{"version":3,"file":"parseSides.js","sources":["../../src/parseSides.js"],"sourcesContent":["/**\n @function parseSides\n @desc Converts a string of directional CSS shorthand values into an object with the values expanded.\n @param {String|Number} sides The CSS shorthand string to expand.\n */\nexport default function(sides) {\n  let values;\n  if (typeof sides === \"number\") values = [sides];\n  else values = sides.split(/\\s+/);\n\n  if (values.length === 1) values = [values[0], values[0], values[0], values[0]];\n  else if (values.length === 2) values = values.concat(values);\n  else if (values.length === 3) values.push(values[1]);\n\n  return [\n    \"top\",\n    \"right\",\n    \"bottom\",\n    \"left\"\n  ].reduce((acc, direction, i) => {\n    const value = parseFloat(values[i]);\n    acc[direction] = value || 0;\n    return acc;\n  }, {});\n}\n"],"names":["let","const"],"mappings":"AAAA;;;;;AAKA,eAAe,SAAS,KAAK,EAAE;EAC7BA,GAAG,CAAC,MAAM,CAAC;EACX,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAE,MAAM,GAAG,CAAC,KAAK,CAAC,GAAC;SAC3C,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,GAAC;;EAEjC,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAE,MAAM,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAC;OAC1E,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAE,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAC;OACxD,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAC;;EAErD,OAAO;IACL,KAAK;IACL,OAAO;IACP,QAAQ;IACR,MAAM;GACP,CAAC,MAAM,UAAC,CAAC,GAAG,EAAE,SAAS,EAAE,CAAC,EAAE,AAAG;IAC9BC,GAAK,CAAC,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,GAAG,CAAC,SAAS,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC;IAC5B,OAAO,GAAG,CAAC;GACZ,EAAE,EAAE,CAAC,CAAC;CACR;"}