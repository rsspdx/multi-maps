{"version":3,"file":"Legend.js","sources":["../../src/Legend.js"],"sourcesContent":["/**\n    @external BaseClass\n    @see https://github.com/d3plus/d3plus-common#BaseClass\n*/\n\nimport {max, sum} from \"d3-array\";\nimport {select} from \"d3-selection\";\n\nimport {accessor, assign, BaseClass, configPrep, constant, elem} from \"d3plus-common\";\nimport * as shapes from \"d3plus-shape\";\nimport {TextBox, textWidth, textWrap} from \"d3plus-text\";\n\n/**\n    @class Legend\n    @extends external:BaseClass\n    @desc Creates an SVG scale based on an array of data. If *data* is specified, immediately draws based on the specified array and returns the current class instance. If *data* is not specified on instantiation, it can be passed/updated after instantiation using the [data](#shape.data) method.\n*/\nexport default class Legend extends BaseClass {\n\n  /**\n      @memberof Legend\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._align = \"center\";\n    this._data = [];\n    this._direction = \"row\";\n    this._duration = 600;\n    this._height = 200;\n    this._id = accessor(\"id\");\n    this._label = accessor(\"id\");\n    this._lineData = [];\n    this._outerBounds = {width: 0, height: 0, x: 0, y: 0};\n    this._padding = 5;\n    this._shape = constant(\"Rect\");\n    this._shapes = [];\n    this._shapeConfig = {\n      duration: this._duration,\n      fill: accessor(\"color\"),\n      height: constant(10),\n      hitArea: (dd, i) => {\n        const d = this._lineData[i],\n              h = max([d.height, d.shapeHeight]);\n        return {width: d.width + d.shapeWidth, height: h, x: -d.shapeWidth / 2, y: -h / 2};\n      },\n      labelBounds: (dd, i, s) => {\n        const d = this._lineData[i],\n              w = s.r !== void 0 ? s.r : s.width / 2;\n        return {width: d.width, height: d.height, x: w + this._padding, y: -d.height / 2 + (d.lh - d.s) / 2 + 1};\n      },\n      labelConfig: {\n        fontColor: constant(\"#444\"),\n        fontFamily: new TextBox().fontFamily(),\n        fontResize: false,\n        fontSize: constant(10)\n      },\n      opacity: 1,\n      r: constant(5),\n      width: constant(10),\n      x: (d, i) => {\n        const datum = this._lineData[i];\n        const y = datum.y;\n        const pad = this._align === \"left\" || this._align === \"right\" && this._direction === \"column\" ? 0 : this._align === \"center\"\n          ? (this._outerBounds.width - this._rowWidth(this._lineData.filter(l => y === l.y))) / 2\n          : this._outerBounds.width - this._rowWidth(this._lineData.filter(l => y === l.y));\n        const prevWords = this._lineData.slice(0, i).filter(l => y === l.y);\n        return this._rowWidth(prevWords) + this._padding * (prevWords.length ? datum.sentence ? 2 : 1 : 0) +\n               this._outerBounds.x + datum.shapeWidth / 2 + pad;\n      },\n      y: (d, i) => {\n        const ld = this._lineData[i];\n        return ld.y + this._titleHeight + this._outerBounds.y +\n               max(this._lineData.filter(l => ld.y === l.y).map(l => l.height).concat(this._data.map((l, x) => this._fetchConfig(\"height\", l, x)))) / 2;\n      }\n    };\n    this._titleClass = new TextBox();\n    this._titleConfig = {};\n    this._verticalAlign = \"middle\";\n    this._width = 400;\n\n  }\n\n  _fetchConfig(key, d, i) {\n    const val = this._shapeConfig[key] || this._shapeConfig.labelConfig[key];\n    if (!val && key === \"lineHeight\") return this._fetchConfig(\"fontSize\", d, i) * 1.4;\n    return typeof val === \"function\" ? val(d, i) : val;\n  }\n\n  _rowHeight(row) {\n    return max(row.map(d => d.height).concat(row.map(d => d.shapeHeight))) + this._padding;\n  }\n\n  _rowWidth(row) {\n    return sum(row.map((d, i) => {\n      const p = this._padding * (i === row.length - 1 ? 0 : d.width ? 2 : 1);\n      return d.shapeWidth + d.width + p;\n    }));\n  }\n\n  /**\n      @memberof Legend\n      @desc Renders the current Legend to the page. If a *callback* is specified, it will be called once the legend is done drawing.\n      @param {Function} [*callback* = undefined]\n      @chainable\n  */\n  render(callback) {\n\n    if (this._select === void 0) this.select(select(\"body\").append(\"svg\").attr(\"width\", `${this._width}px`).attr(\"height\", `${this._height}px`).node());\n\n    // Shape <g> Group\n    this._group = elem(\"g.d3plus-Legend\", {parent: this._select});\n\n    let availableHeight = this._height;\n    this._titleHeight = 0;\n    if (this._title) {\n\n      const f = this._titleConfig.fontFamily || this._titleClass.fontFamily()(),\n            s = this._titleConfig.fontSize || this._titleClass.fontSize()();\n      let lH = lH = this._titleConfig.lineHeight || this._titleClass.lineHeight();\n      lH = lH ? lH() : s * 1.4;\n\n      const res = textWrap()\n        .fontFamily(f)\n        .fontSize(s)\n        .lineHeight(lH)\n        .width(this._width)\n        .height(this._height)\n        (this._title);\n      this._titleHeight = lH + res.lines.length + this._padding;\n      availableHeight -= this._titleHeight;\n    }\n\n    // Calculate Text Sizes\n    this._lineData = this._data.map((d, i) => {\n\n      const label = this._label(d, i);\n\n      let res = {\n        data: d,\n        i,\n        id: this._id(d, i),\n        shapeWidth: this._fetchConfig(\"width\", d, i),\n        shapeHeight: this._fetchConfig(\"height\", d, i),\n        y: 0\n      };\n\n      if (!label) {\n        res.sentence = false;\n        res.words = [];\n        res.height = 0;\n        res.width = 0;\n        return res;\n      }\n\n      const f = this._fetchConfig(\"fontFamily\", d, i),\n            lh = this._fetchConfig(\"lineHeight\", d, i),\n            s = this._fetchConfig(\"fontSize\", d, i);\n\n      const h = availableHeight - (this._data.length + 1) * this._padding,\n            w = this._width;\n\n      res = Object.assign(res, textWrap()\n        .fontFamily(f)\n        .fontSize(s)\n        .lineHeight(lh)\n        .width(w)\n        .height(h)\n        (label));\n\n      res.width = Math.ceil(max(res.lines.map(t => textWidth(t, {\"font-family\": f, \"font-size\": s})))) + s * 0.75;\n      res.height = Math.ceil(res.lines.length * (lh + 1));\n      res.og = {height: res.height, width: res.width};\n      res.f = f;\n      res.s = s;\n      res.lh = lh;\n\n      return res;\n\n    });\n\n    let spaceNeeded;\n    const availableWidth = this._width - this._padding * 2;\n    spaceNeeded = this._rowWidth(this._lineData);\n\n    if (this._direction === \"column\" || spaceNeeded > availableWidth) {\n      let lines = 1, newRows = [];\n\n      const maxLines = max(this._lineData.map(d => d.words.length));\n      this._wrapLines = function() {\n\n        lines++;\n\n        if (lines > maxLines) return;\n\n        const wrappable = lines === 1 ? this._lineData.slice()\n          : this._lineData.filter(d => d.width + d.shapeWidth + this._padding * (d.width ? 2 : 1) > availableWidth && d.words.length >= lines)\n              .sort((a, b) => b.sentence.length - a.sentence.length);\n\n        if (wrappable.length && availableHeight > wrappable[0].height * lines) {\n\n          let truncated = false;\n          for (let x = 0; x < wrappable.length; x++) {\n            const label = wrappable[x];\n            const h = label.og.height * lines, w = label.og.width * (1.5 * (1 / lines));\n            const res = textWrap().fontFamily(label.f).fontSize(label.s).lineHeight(label.lh).width(w).height(h)(label.sentence);\n            if (!res.truncated) {\n              label.width = Math.ceil(max(res.lines.map(t => textWidth(t, {\"font-family\": label.f, \"font-size\": label.s})))) + label.s;\n              label.height = res.lines.length * (label.lh + 1);\n            }\n            else {\n              truncated = true;\n              break;\n            }\n          }\n          if (!truncated) this._wrapRows();\n        }\n        else {\n          newRows = [];\n          return;\n        }\n\n      };\n\n      this._wrapRows = function() {\n        newRows = [];\n        let row = 1, rowWidth = 0;\n        for (let i = 0; i < this._lineData.length; i++) {\n          const d = this._lineData[i],\n                w = d.width + this._padding * (d.width ? 2 : 1) + d.shapeWidth;\n          if (sum(newRows.map(row => max(row, d => max([d.height, d.shapeHeight])))) > availableHeight) {\n            newRows = [];\n            break;\n          }\n          if (w > availableWidth) {\n            newRows = [];\n            this._wrapLines();\n            break;\n          }\n          else if (rowWidth + w < availableWidth) {\n            rowWidth += w;\n          }\n          else if (this._direction !== \"column\") {\n            rowWidth = w;\n            row++;\n          }\n          if (!newRows[row - 1]) newRows[row - 1] = [];\n          newRows[row - 1].push(d);\n          if (this._direction === \"column\") {\n            rowWidth = 0;\n            row++;\n          }\n        }\n      };\n\n      this._wrapRows();\n\n      if (!newRows.length || sum(newRows, this._rowHeight.bind(this)) + this._padding > availableHeight) {\n        spaceNeeded = sum(this._lineData.map(d => d.shapeWidth + this._padding)) - this._padding;\n        for (let i = 0; i < this._lineData.length; i++) {\n          this._lineData[i].width = 0;\n          this._lineData[i].height = 0;\n        }\n        this._wrapRows();\n      }\n\n      if (newRows.length && sum(newRows, this._rowHeight.bind(this)) + this._padding < availableHeight) {\n        newRows.forEach((row, i) => {\n          row.forEach(d => {\n            if (i) {\n              d.y = sum(newRows.slice(0, i), this._rowHeight.bind(this));\n            }\n          });\n        });\n        spaceNeeded = max(newRows, this._rowWidth.bind(this));\n      }\n    }\n\n    const innerHeight = max(this._lineData, (d, i) => max([d.height, this._fetchConfig(\"height\", d.data, i)]) + d.y) + this._titleHeight,\n          innerWidth = spaceNeeded;\n\n    this._outerBounds.width = innerWidth;\n    this._outerBounds.height = innerHeight;\n\n    let xOffset = this._padding,\n        yOffset = this._padding;\n    if (this._align === \"center\") xOffset = (this._width - innerWidth) / 2;\n    else if (this._align === \"right\") xOffset = this._width - this._padding - innerWidth;\n    if (this._verticalAlign === \"middle\") yOffset = (this._height - innerHeight) / 2;\n    else if (this._verticalAlign === \"bottom\") yOffset = this._height - this._padding - innerHeight;\n    this._outerBounds.x = xOffset;\n    this._outerBounds.y = yOffset;\n\n    this._titleClass\n      .data(this._title ? [{text: this._title}] : [])\n      .duration(this._duration)\n      .select(this._group.node())\n      .textAnchor({left: \"start\", center: \"middle\", right: \"end\"}[this._align])\n      .width(this._width - this._padding * 2)\n      .x(this._padding)\n      .y(this._outerBounds.y)\n      .config(this._titleConfig)\n      .render();\n\n    this._shapes = [];\n    const baseConfig = configPrep.bind(this)(this._shapeConfig, \"legend\"),\n          config = {\n            id: d => d.id,\n            label: d => d.label,\n            lineHeight: d => d.lH\n          };\n\n    const data = this._data.map((d, i) => {\n\n      const obj = {\n        __d3plus__: true,\n        data: d, i,\n        id: this._id(d, i),\n        label: this._lineData[i].width ? this._label(d, i) : false,\n        lH: this._fetchConfig(\"lineHeight\", d, i),\n        shape: this._shape(d, i)\n      };\n\n      return obj;\n\n    });\n\n    // Legend Shapes\n    this._shapes = [];\n    [\"Circle\", \"Rect\"].forEach(Shape => {\n\n      this._shapes.push(new shapes[Shape]()\n        .data(data.filter(d => d.shape === Shape))\n        .duration(this._duration)\n        .labelConfig({padding: 0})\n        .select(this._group.node())\n        .verticalAlign(\"top\")\n        .config(assign({}, baseConfig, config))\n        .render());\n\n    });\n\n    if (callback) setTimeout(callback, this._duration + 100);\n\n    return this;\n\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the active method for all shapes to the specified function and returns the current class instance. If *value* is not specified, returns the current active method.\n      @param {Function} [*value*]\n      @chainable\n  */\n  active(_) {\n    this._shapes.forEach(s => s.active(_));\n    return this;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the horizontal alignment to the specified value and returns the current class instance. If *value* is not specified, returns the current horizontal alignment.\n      @param {String} [*value* = \"center\"] Supports `\"left\"` and `\"center\"` and `\"right\"`.\n      @chainable\n  */\n  align(_) {\n    return arguments.length ? (this._align = _, this) : this._align;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *data* is specified, sets the data array to the specified array and returns the current class instance. If *data* is not specified, returns the current data array. A shape key will be drawn for each object in the array.\n      @param {Array} [*data* = []]\n      @chainable\n  */\n  data(_) {\n    return arguments.length ? (this._data = _, this) : this._data;\n  }\n\n  /**\n      @memberof Legend\n      @desc Sets the flow of the items inside the legend. If no value is passed, the current flow will be returned.\n      @param {String} [*value* = \"row\"]\n      @chainable\n  */\n  direction(_) {\n    return arguments.length ? (this._direction = _, this) : this._direction;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the transition duration of the legend and returns the current class instance. If *value* is not specified, returns the current duration.\n      @param {Number} [*value* = 600]\n      @chainable\n  */\n  duration(_) {\n    return arguments.length ? (this._duration = _, this) : this._duration;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the overall height of the legend and returns the current class instance. If *value* is not specified, returns the current height value.\n      @param {Number} [*value* = 100]\n      @chainable\n  */\n  height(_) {\n    return arguments.length ? (this._height = _, this) : this._height;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the hover method for all shapes to the specified function and returns the current class instance. If *value* is not specified, returns the current hover method.\n      @param {Function} [*value*]\n      @chainable\n  */\n  hover(_) {\n    this._shapes.forEach(s => s.hover(_));\n    return this;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the id accessor to the specified function and returns the current class instance. If *value* is not specified, returns the current id accessor.\n      @param {Function} [*value*]\n      @chainable\n      @example\nfunction value(d) {\n  return d.id;\n}\n  */\n  id(_) {\n    return arguments.length ? (this._id = _, this) : this._id;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the label accessor to the specified function or string and returns the current class instance. If *value* is not specified, returns the current label accessor, which is the [id](#shape.id) accessor by default.\n      @param {Function|String} [*value*]\n      @chainable\n  */\n  label(_) {\n    return arguments.length ? (this._label = typeof _ === \"function\" ? _ : constant(_), this) : this._label;\n  }\n\n  /**\n      @memberof Legend\n      @desc If called after the elements have been drawn to DOM, will returns the outer bounds of the legend content.\n      @example\n{\"width\": 180, \"height\": 24, \"x\": 10, \"y\": 20}\n  */\n  outerBounds() {\n    return this._outerBounds;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the padding between each key to the specified number and returns the current class instance. If *value* is not specified, returns the current padding value.\n      @param {Number} [*value* = 10]\n      @chainable\n  */\n  padding(_) {\n    return arguments.length ? (this._padding = _, this) : this._padding;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *selector* is specified, sets the SVG container element to the specified d3 selector or DOM element and returns the current class instance. If *selector* is not specified, returns the current SVG container element.\n      @param {String|HTMLElement} [*selector* = d3.select(\"body\").append(\"svg\")]\n      @chainable\n  */\n  select(_) {\n    return arguments.length ? (this._select = select(_), this) : this._select;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the shape accessor to the specified function or string and returns the current class instance. If *value* is not specified, returns the current shape accessor.\n      @param {Function|String} [*value* = \"Rect\"]\n      @chainable\n  */\n  shape(_) {\n    return arguments.length ? (this._shape = typeof _ === \"function\" ? _ : constant(_), this) : this._shape;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *config* is specified, sets the methods that correspond to the key/value pairs for each shape and returns the current class instance. If *config* is not specified, returns the current shape configuration.\n      @param {Object} [*config* = {}]\n      @chainable\n  */\n  shapeConfig(_) {\n    return arguments.length ? (this._shapeConfig = assign(this._shapeConfig, _), this) : this._shapeConfig;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the title of the legend and returns the current class instance. If *value* is not specified, returns the current title.\n      @param {String} [*value*]\n      @chainable\n  */\n  title(_) {\n    return arguments.length ? (this._title = _, this) : this._title;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the title configuration of the legend and returns the current class instance. If *value* is not specified, returns the current title configuration.\n      @param {Object} [*value*]\n      @chainable\n  */\n  titleConfig(_) {\n    return arguments.length ? (this._titleConfig = assign(this._titleConfig, _), this) : this._titleConfig;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the vertical alignment to the specified value and returns the current class instance. If *value* is not specified, returns the current vertical alignment.\n      @param {String} [*value* = \"middle\"] Supports `\"top\"` and `\"middle\"` and `\"bottom\"`.\n      @chainable\n  */\n  verticalAlign(_) {\n    return arguments.length ? (this._verticalAlign = _, this) : this._verticalAlign;\n  }\n\n  /**\n      @memberof Legend\n      @desc If *value* is specified, sets the overall width of the legend and returns the current class instance. If *value* is not specified, returns the current width value.\n      @param {Number} [*value* = 400]\n      @chainable\n  */\n  width(_) {\n    return arguments.length ? (this._width = _, this) : this._width;\n  }\n\n}\n"],"names":["super","const","this","let","x"],"mappings":"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"}