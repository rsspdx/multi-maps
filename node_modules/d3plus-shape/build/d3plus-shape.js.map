{"version":3,"file":"d3plus-shape.js","sources":["../src/Image.js","../src/geom/pointDistanceSquared.js","../src/geom/pointDistance.js","../src/Shape/Shape.js","../src/geom/lineIntersection.js","../src/geom/segmentBoxContains.js","../src/geom/segmentsIntersect.js","../src/geom/polygonInside.js","../src/geom/polygonRayCast.js","../src/geom/pointRotate.js","../src/geom/polygonRotate.js","../src/geom/simplify.js","../src/geom/largestRect.js","../src/Shape/Area.js","../src/Shape/Bar.js","../src/Shape/Circle.js","../src/Shape/Rect.js","../src/Shape/Line.js","../src/Shape/Whisker.js","../src/Shape/Box.js","../src/geom/shapeEdgePoint.js","../src/geom/path2polygon.js","../src/Shape/Path.js"],"sourcesContent":["import {select} from \"d3-selection\";\nimport {transition} from \"d3-transition\";\n\nimport {accessor, constant} from \"d3plus-common\";\n\n/**\n    @class Image\n    @desc Creates SVG images based on an array of data.\n    @example <caption>a sample row of data</caption>\nvar data = {\"url\": \"file.png\", \"width\": \"100\", \"height\": \"50\"};\n@example <caption>passed to the generator</caption>\nnew Image().data([data]).render();\n@example <caption>creates the following</caption>\n<image class=\"d3plus-Image\" opacity=\"1\" href=\"file.png\" width=\"100\" height=\"50\" x=\"0\" y=\"0\"></image>\n@example <caption>this is shorthand for the following</caption>\nimage().data([data])();\n@example <caption>which also allows a post-draw callback function</caption>\nimage().data([data])(function() { alert(\"draw complete!\"); })\n*/\nexport default class Image {\n\n  /**\n      @memberof Image\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n    this._duration = 600;\n    this._height = accessor(\"height\");\n    this._id = accessor(\"id\");\n    this._pointerEvents = constant(\"auto\");\n    this._select;\n    this._url = accessor(\"url\");\n    this._width = accessor(\"width\");\n    this._x = accessor(\"x\", 0);\n    this._y = accessor(\"y\", 0);\n  }\n\n  /**\n      @memberof Image\n      @desc Renders the current Image to the page. If a *callback* is specified, it will be called once the images are done drawing.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    if (this._select === void 0) this.select(select(\"body\").append(\"svg\").style(\"width\", `${window.innerWidth}px`).style(\"height\", `${window.innerHeight}px`).style(\"display\", \"block\").node());\n\n    const images = this._select.selectAll(\".d3plus-Image\").data(this._data, this._id);\n\n    const enter = images.enter().append(\"image\")\n      .attr(\"class\", \"d3plus-Image\")\n      .attr(\"opacity\", 0)\n      .attr(\"width\", 0)\n      .attr(\"height\", 0)\n      .attr(\"x\", (d, i) => this._x(d, i) + this._width(d, i) / 2)\n      .attr(\"y\", (d, i) => this._y(d, i) + this._height(d, i) / 2);\n\n    const t = transition().duration(this._duration),\n          that = this,\n          update = enter.merge(images);\n\n    update\n      .attr(\"xlink:href\", this._url)\n      .style(\"pointer-events\", this._pointerEvents)\n      .transition(t)\n      .attr(\"opacity\", 1)\n      .attr(\"width\", (d, i) => this._width(d, i))\n      .attr(\"height\", (d, i) => this._height(d, i))\n      .attr(\"x\", (d, i) => this._x(d, i))\n      .attr(\"y\", (d, i) => this._y(d, i))\n      .each(function(d, i) {\n        const image = select(this), link = that._url(d, i);\n        const fullAddress = link.indexOf(\"http://\") === 0 || link.indexOf(\"https://\") === 0;\n        if (!fullAddress || link.indexOf(window.location.hostname) === 0) {\n          const img = new Image();\n          img.src = link;\n          img.crossOrigin = \"Anonymous\";\n          img.onload = function() {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = this.width;\n            canvas.height = this.height;\n            const context = canvas.getContext(\"2d\");\n            context.drawImage(this, 0, 0);\n            image.attr(\"xlink:href\", canvas.toDataURL(\"image/png\"));\n          };\n        }\n      });\n\n    images.exit().transition(t)\n      .attr(\"width\", (d, i) => this._width(d, i))\n      .attr(\"height\", (d, i) => this._height(d, i))\n      .attr(\"x\", (d, i) => this._x(d, i))\n      .attr(\"y\", (d, i) => this._y(d, i))\n      .attr(\"opacity\", 0).remove();\n\n    if (callback) setTimeout(callback, this._duration + 100);\n\n    return this;\n\n  }\n\n  /**\n      @memberof Image\n      @desc If *data* is specified, sets the data array to the specified array and returns the current class instance. If *data* is not specified, returns the current data array. An <image> tag will be drawn for each object in the array.\n      @param {Array} [*data* = []]\n      @chainable\n  */\n  data(_) {\n    return arguments.length ? (this._data = _, this) : this._data;\n  }\n\n  /**\n      @memberof Image\n      @desc If *ms* is specified, sets the animation duration to the specified number and returns the current class instance. If *ms* is not specified, returns the current animation duration.\n      @param {Number} [*ms* = 600]\n      @chainable\n  */\n  duration(_) {\n    return arguments.length ? (this._duration = _, this) : this._duration;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the height accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.height;\n}\n  */\n  height(_) {\n    return arguments.length ? (this._height = typeof _ === \"function\" ? _ : constant(_), this) : this._height;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the id accessor to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.id;\n}\n  */\n  id(_) {\n    return arguments.length ? (this._id = _, this) : this._id;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the pointer-events accessor to the specified function or string and returns the current class instance.\n      @param {Function|String} [*value* = \"auto\"]\n      @chainable\n  */\n  pointerEvents(_) {\n    return arguments.length ? (this._pointerEvents = typeof _ === \"function\" ? _ : constant(_), this) : this._pointerEvents;\n  }\n\n  /**\n      @memberof Image\n      @desc If *selector* is specified, sets the SVG container element to the specified d3 selector or DOM element and returns the current class instance. If *selector* is not specified, returns the current SVG container element.\n      @param {String|HTMLElement} [*selector* = d3.select(\"body\").append(\"svg\")]\n      @chainable\n  */\n  select(_) {\n    return arguments.length ? (this._select = select(_), this) : this._select;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the URL accessor to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.url;\n}\n  */\n  url(_) {\n    return arguments.length ? (this._url = _, this) : this._url;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the width accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.width;\n}\n  */\n  width(_) {\n    return arguments.length ? (this._width = typeof _ === \"function\" ? _ : constant(_), this) : this._width;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the x accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.x || 0;\n}\n  */\n  x(_) {\n    return arguments.length ? (this._x = typeof _ === \"function\" ? _ : constant(_), this) : this._x;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the y accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.y || 0;\n}\n  */\n  y(_) {\n    return arguments.length ? (this._y = typeof _ === \"function\" ? _ : constant(_), this) : this._y;\n  }\n\n}\n","/**\n    @function pointDistanceSquared\n    @desc Returns the squared euclidean distance between two points.\n    @param {Array} p1 The first point, which should always be an `[x, y]` formatted Array.\n    @param {Array} p2 The second point, which should always be an `[x, y]` formatted Array.\n    @returns {Number}\n*/\nexport default (p1, p2) => {\n\n  const dx = p2[0] - p1[0],\n        dy = p2[1] - p1[1];\n\n  return dx * dx + dy * dy;\n\n};\n","import pointDistanceSquared from \"./pointDistanceSquared\";\n\n/**\n    @function pointDistance\n    @desc Calculates the pixel distance between two points.\n    @param {Array} p1 The first point, which should always be an `[x, y]` formatted Array.\n    @param {Array} p2 The second point, which should always be an `[x, y]` formatted Array.\n    @returns {Number}\n*/\nexport default (p1, p2) => Math.sqrt(pointDistanceSquared(p1, p2));\n","/**\n    @external BaseClass\n    @see https://github.com/d3plus/d3plus-common#BaseClass\n*/\n\nimport {min} from \"d3-array\";\nimport {color} from \"d3-color\";\nimport {mouse, select, selectAll} from \"d3-selection\";\nimport {transition} from \"d3-transition\";\n\nimport {accessor, assign, attrize, BaseClass, configPrep, constant, elem} from \"d3plus-common\";\nimport {colorContrast} from \"d3plus-color\";\nimport * as paths from \"d3-shape\";\nimport {strip, TextBox} from \"d3plus-text\";\n\nimport Image from \"../Image\";\nimport pointDistance from \"../geom/pointDistance\";\n\n/**\n    @class Shape\n    @extends external:BaseClass\n    @desc An abstracted class for generating shapes.\n*/\nexport default class Shape extends BaseClass {\n\n  /**\n      @memberof Shape\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor(tagName = \"g\") {\n\n    super();\n\n    this._activeOpacity = 0.25;\n    this._activeStyle = {\n      \"stroke\": (d, i) => {\n        let c = this._fill(d, i);\n        if ([\"transparent\", \"none\"].includes(c)) c = this._stroke(d, i);\n        return color(c).darker(1);\n      },\n      \"stroke-width\": (d, i) => {\n        const s = this._strokeWidth(d, i) || 1;\n        return s * 3;\n      }\n    };\n    this._ariaLabel = constant(\"\");\n    this._backgroundImage = constant(false);\n    this._backgroundImageClass = new Image();\n    this._data = [];\n    this._duration = 600;\n    this._fill = constant(\"black\");\n    this._fillOpacity = constant(1);\n\n    this._hoverOpacity = 0.5;\n    this._hoverStyle = {\n      \"stroke\": (d, i) => {\n        let c = this._fill(d, i);\n        if ([\"transparent\", \"none\"].includes(c)) c = this._stroke(d, i);\n        return color(c).darker(0.5);\n      },\n      \"stroke-width\": (d, i) => {\n        const s = this._strokeWidth(d, i) || 1;\n        return s * 2;\n      }\n    };\n    this._id = (d, i) => d.id !== void 0 ? d.id : i;\n    this._label = constant(false);\n    this._labelClass = new TextBox();\n    this._labelConfig = {\n      fontColor: (d, i) => colorContrast(this._fill(d, i)),\n      fontSize: 12,\n      padding: 5\n    };\n    this._name = \"Shape\";\n    this._opacity = constant(1);\n    this._pointerEvents = constant(\"visiblePainted\");\n    this._role = constant(\"presentation\");\n    this._rotate = constant(0);\n    this._rx = constant(0);\n    this._ry = constant(0);\n    this._scale = constant(1);\n    this._shapeRendering = constant(\"geometricPrecision\");\n    this._stroke = (d, i) => color(this._fill(d, i)).darker(1);\n    this._strokeDasharray = constant(\"0\");\n    this._strokeLinecap = constant(\"butt\");\n    this._strokeOpacity = constant(1);\n    this._strokeWidth = constant(0);\n    this._tagName = tagName;\n    this._textAnchor = constant(\"start\");\n    this._vectorEffect = constant(\"non-scaling-stroke\");\n    this._verticalAlign = constant(\"top\");\n\n    this._x = accessor(\"x\", 0);\n    this._y = accessor(\"y\", 0);\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes() {\n    return {};\n  }\n\n  /**\n      @memberof Shape\n      @desc Adds event listeners to each shape group or hit area.\n      @param {D3Selection} *update* The update cycle of the data binding.\n      @private\n  */\n  _applyEvents(handler) {\n\n    const events = Object.keys(this._on);\n    for (let e = 0; e < events.length; e++) {\n      handler.on(events[e], (d, i) => {\n        if (!this._on[events[e]]) return;\n        if (d.i !== void 0) i = d.i;\n        if (d.nested && d.values) {\n          const cursor = mouse(this._select.node()),\n                values = d.values.map(d => pointDistance(cursor, [this._x(d, i), this._y(d, i)]));\n          d = d.values[values.indexOf(min(values))];\n        }\n        this._on[events[e]].bind(this)(d, i);\n      });\n    }\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Provides the updated styling to the given shape elements.\n      @param {HTMLElement} *elem*\n      @param {Object} *style*\n      @private\n  */\n  _updateStyle(elem, style) {\n\n    const that = this;\n\n    if (elem.size() && elem.node().tagName === \"g\") elem = elem.selectAll(\"*\");\n\n    /**\n        @desc Determines whether a shape is a nested collection of data points, and uses the appropriate data and index for the given function context.\n        @param {Object} *d* data point\n        @param {Number} *i* index\n        @private\n    */\n    function styleLogic(d, i) {\n      return typeof this !== \"function\" ? this\n        : d.nested && d.key && d.values\n          ? this(d.values[0], that._data.indexOf(d.values[0]))\n          : this(d, i);\n    }\n\n    const styleObject = {};\n    for (const key in style) {\n      if ({}.hasOwnProperty.call(style, key)) {\n        styleObject[key] = styleLogic.bind(style[key]);\n      }\n    }\n\n    elem.transition().duration(0).call(attrize, styleObject);\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Provides the default styling to the shape elements.\n      @param {HTMLElement} *elem*\n      @private\n  */\n  _applyStyle(elem) {\n\n    const that = this;\n\n    if (elem.size() && elem.node().tagName === \"g\") elem = elem.selectAll(\"*\");\n\n    /**\n        @desc Determines whether a shape is a nested collection of data points, and uses the appropriate data and index for the given function context.\n        @param {Object} *d* data point\n        @param {Number} *i* index\n        @private\n    */\n    function styleLogic(d, i) {\n      return typeof this !== \"function\" ? this\n        : d.nested && d.key && d.values\n          ? this(d.values[0], that._data.indexOf(d.values[0]))\n          : this(d, i);\n    }\n\n    elem\n      .attr(\"fill\", styleLogic.bind(this._fill))\n      .attr(\"fill-opacity\", styleLogic.bind(this._fillOpacity))\n      .attr(\"rx\", styleLogic.bind(this._rx))\n      .attr(\"ry\", styleLogic.bind(this._ry))\n      .attr(\"stroke\", styleLogic.bind(this._stroke))\n      .attr(\"stroke-dasharray\", styleLogic.bind(this._strokeDasharray))\n      .attr(\"stroke-linecap\", styleLogic.bind(this._strokeLinecap))\n      .attr(\"stroke-opacity\", styleLogic.bind(this._strokeOpacity))\n      .attr(\"stroke-width\", styleLogic.bind(this._strokeWidth))\n      .attr(\"vector-effect\", styleLogic.bind(this._vectorEffect));\n  }\n\n  /**\n      @memberof Shape\n      @desc Calculates the transform for the group elements.\n      @param {HTMLElement} *elem*\n      @private\n  */\n  _applyTransform(elem) {\n\n    elem\n      .attr(\"transform\", (d, i) => `\n        translate(${d.__d3plusShape__\n    ? d.translate ? d.translate\n    : `${this._x(d.data, d.i)},${this._y(d.data, d.i)}`\n    : `${this._x(d, i)},${this._y(d, i)}`})\n        scale(${d.__d3plusShape__ ? d.scale || this._scale(d.data, d.i)\n  : this._scale(d, i)})\n        rotate(${d.__d3plusShape__ ? d.rotate ? d.rotate\n  : this._rotate(d.data || d, d.i)\n  : this._rotate(d.data || d, d.i)})`);\n  }\n\n  /**\n      @memberof Shape\n      @desc Checks for nested data and uses the appropriate variables for accessor functions.\n      @param {HTMLElement} *elem*\n      @private\n  */\n  _nestWrapper(method) {\n    return (d, i) => method(d.__d3plusShape__ ? d.data : d, d.__d3plusShape__ ? d.i : i);\n  }\n\n  /**\n      @memberof Shape\n      @desc Modifies existing shapes to show active status.\n      @private\n  */\n  _renderActive() {\n\n    const that = this;\n\n    this._group.selectAll(\".d3plus-Shape, .d3plus-Image, .d3plus-textBox\")\n      .each(function(d, i) {\n\n        if (!d) d = {};\n        if (!d.parentNode) d.parentNode = this.parentNode;\n        const parent = d.parentNode;\n\n        if (select(this).classed(\"d3plus-textBox\")) d = d.data;\n        if (d.__d3plusShape__ || d.__d3plus__) {\n          while (d && (d.__d3plusShape__ || d.__d3plus__)) {\n            i = d.i;\n            d = d.data;\n          }\n        }\n        else i = that._data.indexOf(d);\n\n        const group = !that._active || typeof that._active !== \"function\" || !that._active(d, i) ? parent : that._activeGroup.node();\n        if (group !== this.parentNode) {\n          group.appendChild(this);\n          if (this.className.baseVal.includes(\"d3plus-Shape\")) {\n            if (parent === group) select(this).call(that._applyStyle.bind(that));\n            else select(this).call(that._updateStyle.bind(that, select(this), that._activeStyle));\n          }\n        }\n\n      });\n\n    // this._renderImage();\n    // this._renderLabels();\n\n    this._group.selectAll(`g.d3plus-${this._name}-shape, g.d3plus-${this._name}-image, g.d3plus-${this._name}-text`)\n      .attr(\"opacity\", this._hover ? this._hoverOpacity : this._active ? this._activeOpacity : 1);\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Modifies existing shapes to show hover status.\n      @private\n  */\n  _renderHover() {\n\n    const that = this;\n\n    this._group.selectAll(`g.d3plus-${this._name}-shape, g.d3plus-${this._name}-image, g.d3plus-${this._name}-text, g.d3plus-${this._name}-hover`)\n      .selectAll(\".d3plus-Shape, .d3plus-Image, .d3plus-textBox\")\n      .each(function(d, i) {\n\n        if (!d) d = {};\n        if (!d.parentNode) d.parentNode = this.parentNode;\n        const parent = d.parentNode;\n\n        if (select(this).classed(\"d3plus-textBox\")) d = d.data;\n        if (d.__d3plusShape__ || d.__d3plus__) {\n          while (d && (d.__d3plusShape__ || d.__d3plus__)) {\n            i = d.i;\n            d = d.data;\n          }\n        }\n        else i = that._data.indexOf(d);\n\n        const group = !that._hover || typeof that._hover !== \"function\" || !that._hover(d, i) ? parent : that._hoverGroup.node();\n        if (group !== this.parentNode) group.appendChild(this);\n        if (this.className.baseVal.includes(\"d3plus-Shape\")) {\n          if (parent === group) select(this).call(that._applyStyle.bind(that));\n          else select(this).call(that._updateStyle.bind(that, select(this), that._hoverStyle));\n        }\n\n      });\n\n    // this._renderImage();\n    // this._renderLabels();\n\n    this._group.selectAll(`g.d3plus-${this._name}-shape, g.d3plus-${this._name}-image, g.d3plus-${this._name}-text`)\n      .attr(\"opacity\", this._hover ? this._hoverOpacity : this._active ? this._activeOpacity : 1);\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Adds background image to each shape group.\n      @private\n  */\n  _renderImage() {\n\n    const imageData = [];\n\n    this._update.merge(this._enter).data()\n      .forEach((datum, i) => {\n\n        const aes = this._aes(datum, i);\n\n        if (aes.r || aes.width && aes.height) {\n\n          let d = datum;\n          if (datum.nested && datum.key && datum.values) {\n            d = datum.values[0];\n            i = this._data.indexOf(d);\n          }\n\n          const height = aes.r ? aes.r * 2 : aes.height,\n                url = this._backgroundImage(d, i),\n                width = aes.r ? aes.r * 2 : aes.width;\n\n          if (url) {\n\n            let x = d.__d3plusShape__ ? d.translate ? d.translate[0]\n                  : this._x(d.data, d.i) : this._x(d, i),\n                y = d.__d3plusShape__ ? d.translate ? d.translate[1]\n                : this._y(d.data, d.i) : this._y(d, i);\n\n            if (aes.x) x += aes.x;\n            if (aes.y) y += aes.y;\n\n            if (d.__d3plusShape__) {\n              d = d.data;\n              i = d.i;\n            }\n\n            imageData.push({\n              __d3plus__: true,\n              data: d,\n              height,\n              i,\n              id: this._id(d, i),\n              url,\n              width,\n              x: x + -width / 2,\n              y: y + -height / 2\n            });\n\n          }\n\n        }\n\n      });\n\n    this._backgroundImageClass\n      .data(imageData)\n      .duration(this._duration)\n      .pointerEvents(\"none\")\n      .select(elem(`g.d3plus-${this._name}-image`, {parent: this._group, update: {opacity: this._active ? this._activeOpacity : 1}}).node())\n      .render();\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Adds labels to each shape group.\n      @private\n  */\n  _renderLabels() {\n\n    const labelData = [];\n\n    this._update.merge(this._enter).data()\n      .forEach((datum, i) => {\n\n        let d = datum;\n        if (datum.nested && datum.key && datum.values) {\n          d = datum.values[0];\n          i = this._data.indexOf(d);\n        }\n\n        let labels = this._label(d, i);\n\n        if (this._labelBounds && labels !== false && labels !== undefined && labels !== null) {\n\n          const bounds = this._labelBounds(d, i, this._aes(datum, i));\n\n          if (bounds) {\n\n            if (labels.constructor !== Array) labels = [labels];\n\n            const x = d.__d3plusShape__ ? d.translate ? d.translate[0]\n                    : this._x(d.data, d.i) : this._x(d, i),\n                  y = d.__d3plusShape__ ? d.translate ? d.translate[1]\n                  : this._y(d.data, d.i) : this._y(d, i);\n\n            if (d.__d3plusShape__) {\n              d = d.data;\n              i = d.i;\n            }\n\n            for (let l = 0; l < labels.length; l++) {\n\n              const b = bounds.constructor === Array ? bounds[l] : Object.assign({}, bounds);\n              const rotate = this._rotate(d, i);\n              let r = d.labelConfig && d.labelConfig.rotate ? d.labelConfig.rotate : bounds.angle !== undefined ? bounds.angle : 0;\n              r += rotate;\n              const rotateAnchor = rotate !== 0 ? [b.x * -1 || 0, b.y * -1 || 0] : [b.width / 2, b.height / 2];\n\n              labelData.push({\n                __d3plus__: true,\n                data: d,\n                height: b.height,\n                l,\n                id: `${this._id(d, i)}_${l}`,\n                r,\n                rotateAnchor,\n                text: labels[l],\n                width: b.width,\n                x: x + b.x,\n                y: y + b.y\n              });\n\n            }\n\n          }\n\n        }\n\n      });\n\n    this._labelClass\n      .data(labelData)\n      .duration(this._duration)\n      .pointerEvents(\"none\")\n      .rotate(d => d.__d3plus__ ? d.r : d.data.r)\n      .rotateAnchor(d => d.__d3plus__ ? d.rotateAnchor : d.data.rotateAnchor)\n      .select(elem(`g.d3plus-${this._name}-text`, {parent: this._group, update: {opacity: this._active ? this._activeOpacity : 1}}).node())\n      .config(configPrep.bind(this)(this._labelConfig))\n      .render();\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Renders the current Shape to the page. If a *callback* is specified, it will be called once the shapes are done drawing.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    if (this._select === void 0) {\n      this.select(select(\"body\").append(\"svg\")\n        .style(\"width\", `${window.innerWidth}px`)\n        .style(\"height\", `${window.innerHeight}px`)\n        .style(\"display\", \"block\").node());\n    }\n\n    this._transition = transition().duration(this._duration);\n\n    let data = this._data, key = this._id;\n    if (this._dataFilter) {\n      data = this._dataFilter(data);\n      if (data.key) key = data.key;\n    }\n\n    if (this._sort) {\n      data = data.sort((a, b) => {\n        while (a.__d3plusShape__ || a.__d3plus__) a = a.data;\n        while (b.__d3plusShape__ || b.__d3plus__) b = b.data;\n        return this._sort(a, b);\n      });\n    }\n\n    selectAll(`g.d3plus-${this._name}-hover > *, g.d3plus-${this._name}-active > *`).each(function(d) {\n      if (d && d.parentNode) d.parentNode.appendChild(this);\n      else this.parentNode.removeChild(this);\n    });\n\n    // Makes the update state of the group selection accessible.\n    this._group = elem(`g.d3plus-${this._name}-group`, {parent: this._select});\n    const update = this._update = elem(`g.d3plus-${this._name}-shape`, {parent: this._group, update: {opacity: this._active ? this._activeOpacity : 1}})\n      .selectAll(`.d3plus-${this._name}`)\n      .data(data, key);\n\n    // Orders and transforms the updating Shapes.\n    update.order().transition(this._transition)\n      .call(this._applyTransform.bind(this));\n\n    // Makes the enter state of the group selection accessible.\n    const enter = this._enter = update.enter().append(this._tagName)\n      .attr(\"class\", (d, i) => `d3plus-Shape d3plus-${this._name} d3plus-id-${strip(this._nestWrapper(this._id)(d, i))}`)\n      .call(this._applyTransform.bind(this))\n      .attr(\"aria-label\", this._ariaLabel)\n      .attr(\"role\", this._role)\n      .attr(\"opacity\", this._nestWrapper(this._opacity));\n\n    const enterUpdate = enter.merge(update);\n\n    enterUpdate\n      .attr(\"shape-rendering\", this._nestWrapper(this._shapeRendering))\n      .attr(\"pointer-events\", \"none\")\n      .transition(this._transition)\n      .attr(\"opacity\", this._nestWrapper(this._opacity))\n      .attr(\"pointer-events\", this._pointerEvents);\n\n    // Makes the exit state of the group selection accessible.\n    const exit = this._exit = update.exit();\n    exit.transition().delay(this._duration).remove();\n\n    this._renderImage();\n    this._renderLabels();\n\n    this._hoverGroup = elem(`g.d3plus-${this._name}-hover`, {parent: this._group});\n    this._activeGroup = elem(`g.d3plus-${this._name}-active`, {parent: this._group});\n\n    const hitAreas = this._group.selectAll(\".d3plus-HitArea\")\n      .data(this._hitArea ? data : [], key);\n\n    hitAreas.order()\n      .call(this._applyTransform.bind(this));\n\n    const isLine = this._name === \"Line\";\n\n    isLine && this._path\n      .curve(paths[`curve${this._curve.charAt(0).toUpperCase()}${this._curve.slice(1)}`])\n      .defined(this._defined)\n      .x(this._x)\n      .y(this._y);\n\n    const hitEnter = hitAreas.enter().append(isLine ? \"path\" : \"rect\")\n      .attr(\"class\", (d, i) => `d3plus-HitArea d3plus-id-${strip(this._nestWrapper(this._id)(d, i))}`)\n      .attr(\"fill\", \"black\")\n      .attr(\"stroke\", \"black\")\n      .attr(\"pointer-events\", \"painted\")\n      .attr(\"opacity\", 0)\n      .call(this._applyTransform.bind(this));\n\n    const that = this;\n\n    const hitUpdates = hitAreas.merge(hitEnter)\n      .each(function(d) {\n        const i = that._data.indexOf(d);\n        const h = that._hitArea(d, i, that._aes(d, i));\n        return h && !(that._name === \"Line\" && parseFloat(that._strokeWidth(d, i)) > 10) ? select(this).call(attrize, h) : select(this).remove();\n      });\n\n    hitAreas.exit().remove();\n\n    this._applyEvents(this._hitArea ? hitUpdates : enterUpdate);\n\n    setTimeout(() => {\n      if (this._active) this._renderActive();\n      else if (this._hover) this._renderHover();\n      if (callback) callback();\n    }, this._duration + 100);\n\n    return this;\n\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the highlight accessor to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n  */\n  active(_) {\n\n    if (!arguments.length || _ === undefined) return this._active;\n    this._active = _;\n    if (this._group) {\n      // this._renderImage();\n      // this._renderLabels();\n      this._renderActive();\n    }\n    return this;\n\n  }\n\n  /**\n      @memberof Shape\n      @desc When shapes are active, this is the opacity of any shape that is not active.\n      @param {Number} *value* = 0.25\n      @chainable\n  */\n  activeOpacity(_) {\n    return arguments.length ? (this._activeOpacity = _, this) : this._activeOpacity;\n  }\n\n  /**\n      @memberof Shape\n      @desc The style to apply to active shapes.\n      @param {Object} *value*\n      @chainable\n  */\n  activeStyle(_) {\n    return arguments.length ? (this._activeStyle = assign({}, this._activeStyle, _), this) : this._activeStyle;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the aria-label attribute to the specified function or string and returns the current class instance.\n      @param {Function|String} *value*\n      @chainable\n  */\n  ariaLabel(_) {\n    return _ !== undefined\n      ? (this._ariaLabel = typeof _ === \"function\" ? _ : constant(_), this)\n      : this._ariaLabel;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the background-image accessor to the specified function or string and returns the current class instance.\n      @param {Function|String} [*value* = false]\n      @chainable\n  */\n  backgroundImage(_) {\n    return arguments.length\n      ? (this._backgroundImage = typeof _ === \"function\" ? _ : constant(_), this)\n      : this._backgroundImage;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *data* is specified, sets the data array to the specified array and returns the current class instance. If *data* is not specified, returns the current data array. A shape will be drawn for each object in the array.\n      @param {Array} [*data* = []]\n      @chainable\n  */\n  data(_) {\n    return arguments.length\n      ? (this._data = _, this)\n      : this._data;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *ms* is specified, sets the animation duration to the specified number and returns the current class instance. If *ms* is not specified, returns the current animation duration.\n      @param {Number} [*ms* = 600]\n      @chainable\n  */\n  duration(_) {\n    return arguments.length\n      ? (this._duration = _, this)\n      : this._duration;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the fill accessor to the specified function or string and returns the current class instance.\n      @param {Function|String} [*value* = \"black\"]\n      @chainable\n  */\n  fill(_) {\n    return arguments.length\n      ? (this._fill = typeof _ === \"function\" ? _ : constant(_), this)\n      : this._fill;\n  }\n\n  /**\n      @memberof Shape\n      @desc Defines the \"fill-opacity\" attribute for the shapes.\n      @param {Function|Number} [*value* = 1]\n      @chainable\n  */\n  fillOpacity(_) {\n    return arguments.length\n      ? (this._fillOpacity = typeof _ === \"function\" ? _ : constant(_), this)\n      : this._fillOpacity;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the highlight accessor to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n  */\n  hover(_) {\n\n    if (!arguments.length || _ === void 0) return this._hover;\n    this._hover = _;\n    if (this._group) {\n      // this._renderImage();\n      // this._renderLabels();\n      this._renderHover();\n    }\n    return this;\n\n  }\n\n  /**\n      @memberof Shape\n      @desc The style to apply to hovered shapes.\n      @param {Object} *value*\n      @chainable\n   */\n  hoverStyle(_) {\n    return arguments.length ? (this._hoverStyle = assign({}, this._hoverStyle, _), this) : this._hoverStyle;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the hover opacity to the specified function and returns the current class instance.\n      @param {Number} [*value* = 0.5]\n      @chainable\n  */\n  hoverOpacity(_) {\n    return arguments.length ? (this._hoverOpacity = _, this) : this._hoverOpacity;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *bounds* is specified, sets the mouse hit area to the specified function and returns the current class instance. If *bounds* is not specified, returns the current mouse hit area accessor.\n      @param {Function} [*bounds*] The given function is passed the data point, index, and internally defined properties of the shape and should return an object containing the following values: `width`, `height`, `x`, `y`.\n      @chainable\n      @example\nfunction(d, i, shape) {\n  return {\n    \"width\": shape.width,\n    \"height\": shape.height,\n    \"x\": -shape.width / 2,\n    \"y\": -shape.height / 2\n  };\n}\n  */\n  hitArea(_) {\n    return arguments.length ? (this._hitArea = typeof _ === \"function\" ? _ : constant(_), this) : this._hitArea;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the id accessor to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n  */\n  id(_) {\n    return arguments.length ? (this._id = _, this) : this._id;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the label accessor to the specified function or string and returns the current class instance.\n      @param {Function|String|Array} [*value*]\n      @chainable\n  */\n  label(_) {\n    return arguments.length ? (this._label = typeof _ === \"function\" ? _ : constant(_), this) : this._label;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *bounds* is specified, sets the label bounds to the specified function and returns the current class instance. If *bounds* is not specified, returns the current inner bounds accessor.\n      @param {Function} [*bounds*] The given function is passed the data point, index, and internally defined properties of the shape and should return an object containing the following values: `width`, `height`, `x`, `y`. If an array is returned from the function, each value will be used in conjunction with each label.\n      @chainable\n      @example\nfunction(d, i, shape) {\n  return {\n    \"width\": shape.width,\n    \"height\": shape.height,\n    \"x\": -shape.width / 2,\n    \"y\": -shape.height / 2\n  };\n}\n  */\n  labelBounds(_) {\n    return arguments.length ? (this._labelBounds = typeof _ === \"function\" ? _ : constant(_), this) : this._labelBounds;\n  }\n\n  /**\n      @memberof Shape\n      @desc A pass-through to the config method of the TextBox class used to create a shape's labels.\n      @param {Object} [*value*]\n      @chainable\n  */\n  labelConfig(_) {\n    return arguments.length ? (this._labelConfig = assign(this._labelConfig, _), this) : this._labelConfig;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the opacity accessor to the specified function or number and returns the current class instance.\n      @param {Number} [*value* = 1]\n      @chainable\n  */\n  opacity(_) {\n    return arguments.length ? (this._opacity = typeof _ === \"function\" ? _ : constant(_), this) : this._opacity;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the pointerEvents accessor to the specified function or string and returns the current class instance.\n      @param {String} [*value*]\n      @chainable\n   */\n  pointerEvents(_) {\n    return arguments.length ? (this._pointerEvents = typeof _ === \"function\" ? _ : constant(_), this) : this._pointerEvents;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the role attribute to the specified function or string and returns the current class instance.\n      @param {Function|String} *value*\n      @chainable\n  */\n  role(_) {\n    return _ !== undefined\n      ? (this._role = typeof _ === \"function\" ? _ : constant(_), this)\n      : this._role;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the rotate accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value* = 0]\n      @chainable\n   */\n  rotate(_) {\n    return arguments.length ? (this._rotate = typeof _ === \"function\" ? _ : constant(_), this) : this._rotate;\n  }\n\n  /**\n      @memberof Shape\n      @desc Defines the \"rx\" attribute for the shapes.\n      @param {Function|Number} [*value* = 0]\n      @chainable\n  */\n  rx(_) {\n    return arguments.length ? (this._rx = typeof _ === \"function\" ? _ : constant(_), this) : this._rx;\n  }\n\n  /**\n      @memberof Shape\n      @desc Defines the \"rx\" attribute for the shapes.\n      @param {Function|Number} [*value* = 0]\n      @chainable\n  */\n  ry(_) {\n    return arguments.length ? (this._ry = typeof _ === \"function\" ? _ : constant(_), this) : this._ry;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the scale accessor to the specified function or string and returns the current class instance.\n      @param {Function|Number} [*value* = 1]\n      @chainable\n  */\n  scale(_) {\n    return arguments.length ? (this._scale = typeof _ === \"function\" ? _ : constant(_), this) : this._scale;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *selector* is specified, sets the SVG container element to the specified d3 selector or DOM element and returns the current class instance. If *selector* is not specified, returns the current SVG container element.\n      @param {String|HTMLElement} [*selector* = d3.select(\"body\").append(\"svg\")]\n      @chainable\n  */\n  select(_) {\n    return arguments.length ? (this._select = select(_), this) : this._select;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the shape-rendering accessor to the specified function or string and returns the current class instance.\n      @param {Function|String} [*value* = \"geometricPrecision\"]\n      @chainable\n      @example\nfunction(d) {\n  return d.x;\n}\n  */\n  shapeRendering(_) {\n    return arguments.length ? (this._shapeRendering = typeof _ === \"function\" ? _ : constant(_), this) : this._shapeRendering;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the sort comparator to the specified function and returns the current class instance.\n      @param {false|Function} [*value* = []]\n      @chainable\n  */\n  sort(_) {\n    return arguments.length ? (this._sort = _, this) : this._sort;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the stroke accessor to the specified function or string and returns the current class instance.\n      @param {Function|String} [*value* = \"black\"]\n      @chainable\n  */\n  stroke(_) {\n    return arguments.length ? (this._stroke = typeof _ === \"function\" ? _ : constant(_), this) : this._stroke;\n  }\n\n  /**\n      @memberof Shape\n      @desc Defines the \"stroke-dasharray\" attribute for the shapes.\n      @param {Function|String} [*value* = \"1\"]\n      @chainable\n  */\n  strokeDasharray(_) {\n    return arguments.length ? (this._strokeDasharray = typeof _ === \"function\" ? _ : constant(_), this) : this._strokeDasharray;\n  }\n\n  /**\n      @memberof Shape\n      @desc Defines the \"stroke-linecap\" attribute for the shapes. Accepted values are `\"butt\"`, `\"round\"`, and `\"square\"`.\n      @param {Function|String} [*value* = \"butt\"]\n      @chainable\n  */\n  strokeLinecap(_) {\n    return arguments.length ? (this._strokeLinecap = typeof _ === \"function\" ? _ : constant(_), this) : this._strokeLinecap;\n  }\n\n  /**\n      @memberof Shape\n      @desc Defines the \"stroke-opacity\" attribute for the shapes.\n      @param {Function|Number} [*value* = 1]\n      @chainable\n  */\n  strokeOpacity(_) {\n    return arguments.length ? (this._strokeOpacity = typeof _ === \"function\" ? _ : constant(_), this) : this._strokeOpacity;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the stroke-width accessor to the specified function or string and returns the current class instance.\n      @param {Function|Number} [*value* = 0]\n      @chainable\n  */\n  strokeWidth(_) {\n    return arguments.length ? (this._strokeWidth = typeof _ === \"function\" ? _ : constant(_), this) : this._strokeWidth;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the text-anchor accessor to the specified function or string and returns the current class instance.\n      @param {Function|String|Array} [*value* = \"start\"]\n      @chainable\n  */\n  textAnchor(_) {\n    return arguments.length ? (this._textAnchor = typeof _ === \"function\" ? _ : constant(_), this) : this._textAnchor;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the vector-effect accessor to the specified function or string and returns the current class instance.\n      @param {Function|String} [*value* = \"non-scaling-stroke\"]\n      @chainable\n  */\n  vectorEffect(_) {\n    return arguments.length ? (this._vectorEffect = typeof _ === \"function\" ? _ : constant(_), this) : this._vectorEffect;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the vertical alignment accessor to the specified function or string and returns the current class instance.\n      @param {Function|String|Array} [*value* = \"start\"]\n      @chainable\n  */\n  verticalAlign(_) {\n    return arguments.length ? (this._verticalAlign = typeof _ === \"function\" ? _ : constant(_), this) : this._verticalAlign;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the x accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.x;\n}\n  */\n  x(_) {\n    return arguments.length ? (this._x = typeof _ === \"function\" ? _ : constant(_), this) : this._x;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the y accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.y;\n}\n  */\n  y(_) {\n    return arguments.length ? (this._y = typeof _ === \"function\" ? _ : constant(_), this) : this._y;\n  }\n\n}\n","/**\n    @function lineIntersection\n    @desc Finds the intersection point (if there is one) of the lines p1q1 and p2q2.\n    @param {Array} p1 The first point of the first line segment, which should always be an `[x, y]` formatted Array.\n    @param {Array} q1 The second point of the first line segment, which should always be an `[x, y]` formatted Array.\n    @param {Array} p2 The first point of the second line segment, which should always be an `[x, y]` formatted Array.\n    @param {Array} q2 The second point of the second line segment, which should always be an `[x, y]` formatted Array.\n    @returns {Boolean}\n*/\nexport default function(p1, q1, p2, q2) {\n\n  // allow for some margins due to numerical errors\n  const eps = 1e-9;\n\n  // find the intersection point between the two infinite lines\n  const dx1 = p1[0] - q1[0],\n        dx2 = p2[0] - q2[0],\n        dy1 = p1[1] - q1[1],\n        dy2 = p2[1] - q2[1];\n\n  const denom = dx1 * dy2 - dy1 * dx2;\n\n  if (Math.abs(denom) < eps) return null;\n\n  const cross1 = p1[0] * q1[1] - p1[1] * q1[0],\n        cross2 = p2[0] * q2[1] - p2[1] * q2[0];\n\n  const px = (cross1 * dx2 - cross2 * dx1) / denom,\n        py = (cross1 * dy2 - cross2 * dy1) / denom;\n\n  return [px, py];\n\n}\n","/**\n    @function segmentBoxContains\n    @desc Checks whether a point is inside the bounding box of a line segment.\n    @param {Array} s1 The first point of the line segment to be used for the bounding box, which should always be an `[x, y]` formatted Array.\n    @param {Array} s2 The second point of the line segment to be used for the bounding box, which should always be an `[x, y]` formatted Array.\n    @param {Array} p The point to be checked, which should always be an `[x, y]` formatted Array.\n    @returns {Boolean}\n*/\nexport default function(s1, s2, p) {\n\n  const eps = 1e-9, [px, py] = p;\n\n  return !(px < Math.min(s1[0], s2[0]) - eps || px > Math.max(s1[0], s2[0]) + eps ||\n           py < Math.min(s1[1], s2[1]) - eps || py > Math.max(s1[1], s2[1]) + eps);\n\n}\n","import lineIntersection from \"./lineIntersection\";\nimport segmentBoxContains from \"./segmentBoxContains\";\n\n/**\n    @function segmentsIntersect\n    @desc Checks whether the line segments p1q1 && p2q2 intersect.\n    @param {Array} p1 The first point of the first line segment, which should always be an `[x, y]` formatted Array.\n    @param {Array} q1 The second point of the first line segment, which should always be an `[x, y]` formatted Array.\n    @param {Array} p2 The first point of the second line segment, which should always be an `[x, y]` formatted Array.\n    @param {Array} q2 The second point of the second line segment, which should always be an `[x, y]` formatted Array.\n    @returns {Boolean}\n*/\nexport default function(p1, q1, p2, q2) {\n\n  const p = lineIntersection(p1, q1, p2, q2);\n  if (!p) return false;\n  return segmentBoxContains(p1, q1, p) && segmentBoxContains(p2, q2, p);\n\n}\n","import {polygonContains} from \"d3-polygon\";\n\nimport segmentsIntersect from \"./segmentsIntersect\";\n\n/**\n    @function polygonInside\n    @desc Checks if one polygon is inside another polygon.\n    @param {Array} polyA An Array of `[x, y]` points to be used as the inner polygon, checking if it is inside polyA.\n    @param {Array} polyB An Array of `[x, y]` points to be used as the containing polygon.\n    @returns {Boolean}\n*/\nexport default function(polyA, polyB) {\n\n  let iA = -1;\n  const nA = polyA.length;\n  const nB = polyB.length;\n  let bA = polyA[nA - 1];\n\n  while (++iA < nA) {\n\n    const aA = bA;\n    bA = polyA[iA];\n\n    let iB = -1;\n    let bB = polyB[nB - 1];\n    while (++iB < nB) {\n      const aB = bB;\n      bB = polyB[iB];\n      if (segmentsIntersect(aA, bA, aB, bB)) return false;\n    }\n  }\n\n  return polygonContains(polyB, polyA[0]);\n\n}\n","import lineIntersection from \"./lineIntersection\";\nimport segmentBoxContains from \"./segmentBoxContains\";\nimport pointDistanceSquared from \"./pointDistanceSquared\";\n\n/**\n    @function polygonRayCast\n    @desc Gives the two closest intersection points between a ray cast from a point inside a polygon. The two points should lie on opposite sides of the origin.\n    @param {Array} poly The polygon to test against, which should be an `[x, y]` formatted Array.\n    @param {Array} origin The origin point of the ray to be cast, which should be an `[x, y]` formatted Array.\n    @param {Number} [alpha = 0] The angle in radians of the ray.\n    @returns {Array} An array containing two values, the closest point on the left and the closest point on the right. If either point cannot be found, that value will be `null`.\n*/\nexport default function(poly, origin, alpha = 0) {\n\n  const eps = 1e-9;\n  origin = [origin[0] + eps * Math.cos(alpha), origin[1] + eps * Math.sin(alpha)];\n  const [x0, y0] = origin;\n  const shiftedOrigin = [x0 + Math.cos(alpha), y0 + Math.sin(alpha)];\n\n  let idx = 0;\n  if (Math.abs(shiftedOrigin[0] - x0) < eps) idx = 1;\n  let i = -1;\n  const n = poly.length;\n  let b = poly[n - 1];\n  let minSqDistLeft = Number.MAX_VALUE;\n  let minSqDistRight = Number.MAX_VALUE;\n  let closestPointLeft = null;\n  let closestPointRight = null;\n  while (++i < n) {\n    const a = b;\n    b = poly[i];\n    const p = lineIntersection(origin, shiftedOrigin, a, b);\n    if (p && segmentBoxContains(a, b, p)) {\n      const sqDist = pointDistanceSquared(origin, p);\n      if (p[idx] < origin[idx]) {\n        if (sqDist < minSqDistLeft) {\n          minSqDistLeft = sqDist;\n          closestPointLeft = p;\n        }\n      }\n      else if (p[idx] > origin[idx]) {\n        if (sqDist < minSqDistRight) {\n          minSqDistRight = sqDist;\n          closestPointRight = p;\n        }\n      }\n    }\n  }\n\n  return [closestPointLeft, closestPointRight];\n\n}\n","/**\n    @function pointRotate\n    @desc Rotates a point around a given origin.\n    @param {Array} p The point to be rotated, which should always be an `[x, y]` formatted Array.\n    @param {Number} alpha The angle in radians to rotate.\n    @param {Array} [origin = [0, 0]] The origin point of the rotation, which should always be an `[x, y]` formatted Array.\n    @returns {Boolean}\n*/\nexport default function(p, alpha, origin = [0, 0]) {\n\n  const cosAlpha = Math.cos(alpha),\n        sinAlpha = Math.sin(alpha),\n        xshifted = p[0] - origin[0],\n        yshifted = p[1] - origin[1];\n\n  return [\n    cosAlpha * xshifted - sinAlpha * yshifted + origin[0],\n    sinAlpha * xshifted + cosAlpha * yshifted + origin[1]\n  ];\n\n}\n","import pointRotate from \"./pointRotate\";\n\n/**\n    @function polygonRotate\n    @desc Rotates a point around a given origin.\n    @param {Array} poly The polygon to be rotated, which should be an Array of `[x, y]` values.\n    @param {Number} alpha The angle in radians to rotate.\n    @param {Array} [origin = [0, 0]] The origin point of the rotation, which should be an `[x, y]` formatted Array.\n    @returns {Boolean}\n*/\nexport default (poly, alpha, origin = [0, 0]) => poly.map(p => pointRotate(p, alpha, origin));\n","import pointDistanceSquared from \"./pointDistanceSquared\";\n\n/**\n    @desc square distance from a point to a segment\n    @param {Array} point\n    @param {Array} segmentAnchor1\n    @param {Array} segmentAnchor2\n    @private\n*/\nfunction getSqSegDist(p, p1, p2) {\n\n  let x = p1[0],\n      y = p1[1];\n\n  let dx = p2[0] - x,\n      dy = p2[1] - y;\n\n  if (dx !== 0 || dy !== 0) {\n\n    const t = ((p[0] - x) * dx + (p[1] - y) * dy) / (dx * dx + dy * dy);\n\n    if (t > 1) {\n      x = p2[0];\n      y = p2[1];\n\n    }\n    else if (t > 0) {\n      x += dx * t;\n      y += dy * t;\n    }\n\n  }\n\n  dx = p[0] - x;\n  dy = p[1] - y;\n\n  return dx * dx + dy * dy;\n\n}\n\n/**\n    @desc basic distance-based simplification\n    @param {Array} polygon\n    @param {Number} sqTolerance\n    @private\n*/\nfunction simplifyRadialDist(poly, sqTolerance) {\n\n  let point,\n      prevPoint = poly[0];\n\n  const newPoints = [prevPoint];\n\n  for (let i = 1, len = poly.length; i < len; i++) {\n    point = poly[i];\n\n    if (pointDistanceSquared(point, prevPoint) > sqTolerance) {\n      newPoints.push(point);\n      prevPoint = point;\n    }\n  }\n\n  if (prevPoint !== point) newPoints.push(point);\n\n  return newPoints;\n}\n\n/**\n    @param {Array} polygon\n    @param {Number} first\n    @param {Number} last\n    @param {Number} sqTolerance\n    @param {Array} simplified\n    @private\n*/\nfunction simplifyDPStep(poly, first, last, sqTolerance, simplified) {\n\n  let index, maxSqDist = sqTolerance;\n\n  for (let i = first + 1; i < last; i++) {\n    const sqDist = getSqSegDist(poly[i], poly[first], poly[last]);\n\n    if (sqDist > maxSqDist) {\n      index = i;\n      maxSqDist = sqDist;\n    }\n  }\n\n  if (maxSqDist > sqTolerance) {\n    if (index - first > 1) simplifyDPStep(poly, first, index, sqTolerance, simplified);\n    simplified.push(poly[index]);\n    if (last - index > 1) simplifyDPStep(poly, index, last, sqTolerance, simplified);\n  }\n}\n\n/**\n    @desc simplification using Ramer-Douglas-Peucker algorithm\n    @param {Array} polygon\n    @param {Number} sqTolerance\n    @private\n*/\nfunction simplifyDouglasPeucker(poly, sqTolerance) {\n  const last = poly.length - 1;\n\n  const simplified = [poly[0]];\n  simplifyDPStep(poly, 0, last, sqTolerance, simplified);\n  simplified.push(poly[last]);\n\n  return simplified;\n}\n\n/**\n    @function largestRect\n    @desc Simplifies the points of a polygon using both the Ramer-Douglas-Peucker algorithm and basic distance-based simplification. Adapted to an ES6 module from the excellent [Simplify.js](http://mourner.github.io/simplify-js/).\n    @author Vladimir Agafonkin\n    @param {Array} poly An Array of points that represent a polygon.\n    @param {Number} [tolerance = 1] Affects the amount of simplification (in the same metric as the point coordinates).\n    @param {Boolean} [highestQuality = false] Excludes distance-based preprocessing step which leads to highest quality simplification but runs ~10-20 times slower.\n\n*/\nexport default (poly, tolerance = 1, highestQuality = false) => {\n\n  if (poly.length <= 2) return poly;\n\n  const sqTolerance = tolerance * tolerance;\n\n  poly = highestQuality ? poly : simplifyRadialDist(poly, sqTolerance);\n  poly = simplifyDouglasPeucker(poly, sqTolerance);\n\n  return poly;\n\n};\n","import {extent, merge, range} from \"d3-array\";\nimport {polygonArea, polygonCentroid, polygonContains} from \"d3-polygon\";\n\nimport polygonInside from \"./polygonInside\";\nimport polygonRayCast from \"./polygonRayCast\";\nimport polygonRotate from \"./polygonRotate\";\nimport simplify from \"./simplify\";\nimport pointDistanceSquared from \"./pointDistanceSquared\";\n\n// Algorithm constants\nconst aspectRatioStep = 0.5; // step size for the aspect ratio\nconst angleStep = 5; // step size for angles (in degrees); has linear impact on running time\n\nconst polyCache = {};\n\n/**\n    @typedef {Object} LargestRect\n    @desc The returned Object of the largestRect function.\n    @property {Number} width The width of the rectangle\n    @property {Number} height The height of the rectangle\n    @property {Number} cx The x coordinate of the rectangle's center\n    @property {Number} cy The y coordinate of the rectangle's center\n    @property {Number} angle The rotation angle of the rectangle in degrees. The anchor of rotation is the center point.\n    @property {Number} area The area of the largest rectangle.\n    @property {Array} points An array of x/y coordinates for each point in the rectangle, useful for rendering paths.\n*/\n\n/**\n    @function largestRect\n    @author Daniel Smilkov [dsmilkov@gmail.com]\n    @desc An angle of zero means that the longer side of the polygon (the width) will be aligned with the x axis. An angle of 90 and/or -90 means that the longer side of the polygon (the width) will be aligned with the y axis. The value can be a number between -90 and 90 specifying the angle of rotation of the polygon, a string which is parsed to a number, or an array of numbers specifying the possible rotations of the polygon.\n    @param {Array} poly An Array of points that represent a polygon.\n    @param {Object} [options] An Object that allows for overriding various parameters of the algorithm.\n    @param {Number|String|Array} [options.angle = d3.range(-90, 95, 5)] The allowed rotations of the final rectangle.\n    @param {Number|String|Array} [options.aspectRatio] The ratio between the width and height of the rectangle. The value can be a number, a string which is parsed to a number, or an array of numbers specifying the possible aspect ratios of the final rectangle.\n    @param {Number} [options.maxAspectRatio = 15] The maximum aspect ratio (width/height) allowed for the rectangle. This property should only be used if the aspectRatio is not provided.\n    @param {Number} [options.minAspectRatio = 1] The minimum aspect ratio (width/height) allowed for the rectangle. This property should only be used if the aspectRatio is not provided.\n    @param {Number} [options.nTries = 20] The number of randomly drawn points inside the polygon which the algorithm explores as possible center points of the maximal rectangle.\n    @param {Number} [options.minHeight = 0] The minimum height of the rectangle.\n    @param {Number} [options.minWidth = 0] The minimum width of the rectangle.\n    @param {Number} [options.tolerance = 0.02] The simplification tolerance factor, between 0 and 1. A larger tolerance corresponds to more extensive simplification.\n    @param {Array} [options.origin] The center point of the rectangle. If specified, the rectangle will be fixed at that point, otherwise the algorithm optimizes across all possible points. The given value can be either a two dimensional array specifying the x and y coordinate of the origin or an array of two dimensional points specifying multiple possible center points of the rectangle.\n    @param {Boolean} [options.cache] Whether or not to cache the result, which would be used in subsequent calculations to preserve consistency and speed up calculation time.\n    @return {LargestRect}\n*/\nexport default function(poly, options = {}) {\n\n  if (poly.length < 3) {\n    if (options.verbose) console.error(\"polygon has to have at least 3 points\", poly);\n    return null;\n  }\n\n  // For visualization debugging purposes\n  const events = [];\n\n  // User's input normalization\n  options = Object.assign({\n    angle: range(-90, 90 + angleStep, angleStep),\n    cache: true,\n    maxAspectRatio: 15,\n    minAspectRatio: 1,\n    minHeight: 0,\n    minWidth: 0,\n    nTries: 20,\n    tolerance: 0.02,\n    verbose: false\n  }, options);\n\n  const angles = options.angle instanceof Array ? options.angle\n    : typeof options.angle === \"number\" ? [options.angle]\n    : typeof options.angle === \"string\" && !isNaN(options.angle) ? [Number(options.angle)]\n    : [];\n\n  const aspectRatios = options.aspectRatio instanceof Array ? options.aspectRatio\n    : typeof options.aspectRatio === \"number\" ? [options.aspectRatio]\n    : typeof options.aspectRatio === \"string\" && !isNaN(options.aspectRatio) ? [Number(options.aspectRatio)]\n    : [];\n\n  const origins = options.origin && options.origin instanceof Array\n    ? options.origin[0] instanceof Array ? options.origin\n    : [options.origin] : [];\n\n  let cacheString;\n  if (options.cache) {\n    cacheString = merge(poly).join(\",\");\n    cacheString += `-${options.minAspectRatio}`;\n    cacheString += `-${options.maxAspectRatio}`;\n    cacheString += `-${options.minHeight}`;\n    cacheString += `-${options.minWidth}`;\n    cacheString += `-${angles.join(\",\")}`;\n    cacheString += `-${origins.join(\",\")}`;\n    if (polyCache[cacheString]) return polyCache[cacheString];\n  }\n\n  const area = Math.abs(polygonArea(poly)); // take absolute value of the signed area\n  if (area === 0) {\n    if (options.verbose) console.error(\"polygon has 0 area\", poly);\n    return null;\n  }\n  // get the width of the bounding box of the original polygon to determine tolerance\n  let [minx, maxx] = extent(poly, d => d[0]);\n  let [miny, maxy] = extent(poly, d => d[1]);\n\n  // simplify polygon\n  const tolerance = Math.min(maxx - minx, maxy - miny) * options.tolerance;\n\n  if (tolerance > 0) poly = simplify(poly, tolerance);\n  if (options.events) events.push({type: \"simplify\", poly});\n\n  // get the width of the bounding box of the simplified polygon\n  [minx, maxx] = extent(poly, d => d[0]);\n  [miny, maxy] = extent(poly, d => d[1]);\n  const [boxWidth, boxHeight] = [maxx - minx, maxy - miny];\n\n  // discretize the binary search for optimal width to a resolution of this times the polygon width\n  const widthStep = Math.min(boxWidth, boxHeight) / 50;\n\n  // populate possible center points with random points inside the polygon\n  if (!origins.length) {\n    // get the centroid of the polygon\n    const centroid = polygonCentroid(poly);\n    if (isNaN(centroid[0])) {\n      if (options.verbose) console.error(\"cannot find centroid\", poly);\n      return null;\n    }\n    if (polygonContains(poly, centroid)) origins.push(centroid);\n    // get few more points inside the polygon\n    while (origins.length < options.nTries) {\n      const rndX = Math.random() * boxWidth + minx;\n      const rndY = Math.random() * boxHeight + miny;\n      const rndPoint = [rndX, rndY];\n      if (polygonContains(poly, rndPoint)) origins.push(rndPoint);\n    }\n  }\n  if (options.events) events.push({type: \"origins\", points: origins});\n  let maxArea = 0;\n  let maxRect = null;\n\n  for (let ai = 0; ai < angles.length; ai++) {\n    const angle = angles[ai];\n    const angleRad = -angle * Math.PI / 180;\n    if (options.events) events.push({type: \"angle\", angle});\n    for (let i = 0; i < origins.length; i++) {\n      const origOrigin = origins[i];\n      // generate improved origins\n      const [p1W, p2W] = polygonRayCast(poly, origOrigin, angleRad);\n      const [p1H, p2H] = polygonRayCast(poly, origOrigin, angleRad + Math.PI / 2);\n      const modifOrigins = [];\n      if (p1W && p2W) modifOrigins.push([(p1W[0] + p2W[0]) / 2, (p1W[1] + p2W[1]) / 2]); // average along with width axis\n      if (p1H && p2H) modifOrigins.push([(p1H[0] + p2H[0]) / 2, (p1H[1] + p2H[1]) / 2]); // average along with height axis\n\n      if (options.events) events.push({type: \"modifOrigin\", idx: i, p1W, p2W, p1H, p2H, modifOrigins});\n\n      for (let i = 0; i < modifOrigins.length; i++) {\n\n        const origin = modifOrigins[i];\n\n        if (options.events) events.push({type: \"origin\", cx: origin[0], cy: origin[1]});\n\n        const [p1W, p2W] = polygonRayCast(poly, origin, angleRad);\n        if (p1W === null || p2W === null) continue;\n        const minSqDistW = Math.min(pointDistanceSquared(origin, p1W), pointDistanceSquared(origin, p2W));\n        const maxWidth = 2 * Math.sqrt(minSqDistW);\n\n        const [p1H, p2H] = polygonRayCast(poly, origin, angleRad + Math.PI / 2);\n        if (p1H === null || p2H === null) continue;\n        const minSqDistH = Math.min(pointDistanceSquared(origin, p1H), pointDistanceSquared(origin, p2H));\n        const maxHeight = 2 * Math.sqrt(minSqDistH);\n\n        if (maxWidth * maxHeight < maxArea) continue;\n\n        let aRatios = aspectRatios;\n        if (!aRatios.length) {\n          const minAspectRatio = Math.max(options.minAspectRatio, options.minWidth / maxHeight, maxArea / (maxHeight * maxHeight));\n          const maxAspectRatio = Math.min(options.maxAspectRatio, maxWidth / options.minHeight, maxWidth * maxWidth / maxArea);\n          aRatios = range(minAspectRatio, maxAspectRatio + aspectRatioStep, aspectRatioStep);\n        }\n\n        for (let a = 0; a < aRatios.length; a++) {\n\n          const aRatio = aRatios[a];\n\n          // do a binary search to find the max width that works\n          let left = Math.max(options.minWidth, Math.sqrt(maxArea * aRatio));\n          let right = Math.min(maxWidth, maxHeight * aRatio);\n          if (right * maxHeight < maxArea) continue;\n\n          if (options.events && right - left >= widthStep) events.push({type: \"aRatio\", aRatio});\n\n          while (right - left >= widthStep) {\n            const width = (left + right) / 2;\n            const height = width / aRatio;\n            const [cx, cy] = origin;\n            let rectPoly = [\n              [cx - width / 2, cy - height / 2],\n              [cx + width / 2, cy - height / 2],\n              [cx + width / 2, cy + height / 2],\n              [cx - width / 2, cy + height / 2]\n            ];\n            rectPoly = polygonRotate(rectPoly, angleRad, origin);\n            const insidePoly = polygonInside(rectPoly, poly);\n            if (insidePoly) {\n              // we know that the area is already greater than the maxArea found so far\n              maxArea = width * height;\n              rectPoly.push(rectPoly[0]);\n              maxRect = {area: maxArea, cx, cy, width, height, angle: -angle, points: rectPoly};\n              left = width; // increase the width in the binary search\n            }\n            else {\n              right = width; // decrease the width in the binary search\n            }\n            if (options.events) events.push({type: \"rectangle\", areaFraction: width * height / area, cx, cy, width, height, angle, insidePoly});\n\n          }\n\n        }\n\n      }\n\n    }\n\n  }\n\n  if (options.cache) {\n    polyCache[cacheString] = maxRect;\n  }\n\n  return options.events ? Object.assign(maxRect || {}, {events}) : maxRect;\n\n}\n","import {extent} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {interpolatePath} from \"d3-interpolate-path\";\nimport {select} from \"d3-selection\";\nimport * as paths from \"d3-shape\";\n\nimport {accessor, constant, merge} from \"d3plus-common\";\n\nimport Shape from \"./Shape\";\nimport largestRect from \"../geom/largestRect\";\n\n/**\n    @class Area\n    @extends Shape\n    @desc Creates SVG areas based on an array of data.\n*/\nexport default class Area extends Shape {\n\n  /**\n      @memberof Area\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._curve = \"linear\";\n    this._defined = () => true;\n    this._labelBounds = (d, i, aes) => {\n      const r = largestRect(aes.points);\n      if (!r) return null;\n      return {angle: r.angle, width: r.width, height: r.height, x: r.cx - r.width / 2 - this._x(d, i), y: r.cy - r.height / 2 - this._y(d, i)};\n    };\n    this._labelConfig = Object.assign(this._labelConfig, {\n      textAnchor: \"middle\",\n      verticalAlign: \"middle\"\n    });\n    this._name = \"Area\";\n    this._x = accessor(\"x\");\n    this._x0 = accessor(\"x\");\n    this._x1 = null;\n    this._y = constant(0);\n    this._y0 = constant(0);\n    this._y1 = accessor(\"y\");\n\n  }\n\n  /**\n      @memberof Area\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d) {\n    const values = d.values.slice().sort((a, b) => this._y1 ? this._x(a) - this._x(b) : this._y(a) - this._y(b));\n    const points1 = values.map((v, z) => [this._x0(v, z), this._y0(v, z)]);\n    const points2 = values.reverse().map((v, z) => this._y1 ? [this._x(v, z), this._y1(v, z)] : [this._x1(v, z), this._y(v, z)]);\n    let points = points1.concat(points2);\n    if (points1[0][1] > points2[0][1]) points = points.reverse();\n    points.push(points[0]);\n    return {points};\n  }\n\n  /**\n      @memberof Area\n      @desc Filters/manipulates the data array before binding each point to an SVG group.\n      @param {Array} [*data* = the data array to be filtered]\n      @private\n  */\n  _dataFilter(data) {\n\n    const areas = nest().key(this._id).entries(data).map(d => {\n\n      d.data = merge(d.values);\n      d.i = data.indexOf(d.values[0]);\n\n      const x = extent(d.values.map(this._x)\n        .concat(d.values.map(this._x0))\n        .concat(this._x1 ? d.values.map(this._x1) : [])\n      );\n      d.xR = x;\n      d.width = x[1] - x[0];\n      d.x = x[0] + d.width / 2;\n\n      const y = extent(d.values.map(this._y)\n        .concat(d.values.map(this._y0))\n        .concat(this._y1 ? d.values.map(this._y1) : [])\n      );\n      d.yR = y;\n      d.height = y[1] - y[0];\n      d.y = y[0] + d.height / 2;\n\n      d.nested = true;\n      d.translate = [d.x, d.y];\n      d.__d3plusShape__ = true;\n\n      return d;\n    });\n\n    areas.key = d => d.key;\n    return areas;\n\n  }\n\n  /**\n      @memberof Area\n      @desc Draws the area polygons.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    const path = this._path = paths.area()\n      .defined(this._defined)\n      .curve(paths[`curve${this._curve.charAt(0).toUpperCase()}${this._curve.slice(1)}`])\n      .x(this._x).x0(this._x0).x1(this._x1)\n      .y(this._y).y0(this._y0).y1(this._y1);\n\n    const exitPath = paths.area()\n      .defined(d => d)\n      .curve(paths[`curve${this._curve.charAt(0).toUpperCase()}${this._curve.slice(1)}`])\n      .x(this._x).x0(this._x0).x1(this._x1)\n      .y(this._y).y0(this._y0).y1(this._y1);\n\n    this._enter.append(\"path\")\n      .attr(\"transform\", d => `translate(${-d.xR[0] - d.width / 2}, ${-d.yR[0] - d.height / 2})`)\n      .attr(\"d\", d => path(d.values))\n      .call(this._applyStyle.bind(this));\n\n    this._update.select(\"path\").transition(this._transition)\n      .attr(\"transform\", d => `translate(${-d.xR[0] - d.width / 2}, ${-d.yR[0] - d.height / 2})`)\n      .attrTween(\"d\", function(d) {\n        return interpolatePath(select(this).attr(\"d\"), path(d.values));\n      })\n      .call(this._applyStyle.bind(this));\n\n    this._exit.select(\"path\").transition(this._transition)\n      .attrTween(\"d\", function(d) {\n        return interpolatePath(select(this).attr(\"d\"), exitPath(d.values));\n      });\n\n    return this;\n\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the area curve to the specified string and returns the current class instance. If *value* is not specified, returns the current area curve.\n      @param {String} [*value* = \"linear\"]\n      @chainable\n  */\n  curve(_) {\n    return arguments.length ? (this._curve = _, this) : this._curve;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the defined accessor to the specified function and returns the current class instance. If *value* is not specified, returns the current defined accessor.\n      @param {Function} [*value*]\n      @chainable\n  */\n  defined(_) {\n    return arguments.length ? (this._defined = _, this) : this._defined;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the x accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current x accessor.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  x(_) {\n    if (!arguments.length) return this._x;\n    this._x = typeof _ === \"function\" ? _ : constant(_);\n    this._x0 = this._x;\n    return this;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the x0 accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current x0 accessor.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  x0(_) {\n    if (!arguments.length) return this._x0;\n    this._x0 = typeof _ === \"function\" ? _ : constant(_);\n    this._x = this._x0;\n    return this;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the x1 accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current x1 accessor.\n      @param {Function|Number|null} [*value*]\n      @chainable\n  */\n  x1(_) {\n    return arguments.length ? (this._x1 = typeof _ === \"function\" || _ === null ? _ : constant(_), this) : this._x1;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the y accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current y accessor.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  y(_) {\n    if (!arguments.length) return this._y;\n    this._y = typeof _ === \"function\" ? _ : constant(_);\n    this._y0 = this._y;\n    return this;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the y0 accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current y0 accessor.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  y0(_) {\n    if (!arguments.length) return this._y0;\n    this._y0 = typeof _ === \"function\" ? _ : constant(_);\n    this._y = this._y0;\n    return this;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the y1 accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current y1 accessor.\n      @param {Function|Number|null} [*value*]\n      @chainable\n  */\n  y1(_) {\n    return arguments.length ? (this._y1 = typeof _ === \"function\" || _ === null ? _ : constant(_), this) : this._y1;\n  }\n\n}\n","import {accessor, constant} from \"d3plus-common\";\n\nimport Shape from \"./Shape\";\n\n/**\n    @class Bar\n    @extends Shape\n    @desc Creates SVG areas based on an array of data.\n*/\nexport default class Bar extends Shape {\n\n  /**\n      @memberof Bar\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n\n    super(\"rect\");\n\n    this._name = \"Bar\";\n    this._height = constant(10);\n    this._labelBounds = (d, i, s) => ({\n      width: s.width,\n      height: s.height,\n      x: this._x1 !== null ? this._getX(d, i) : -s.width / 2,\n      y: this._x1 === null ? this._getY(d, i) : -s.height / 2\n    });\n    this._width = constant(10);\n    this._x = accessor(\"x\");\n    this._x0 = accessor(\"x\");\n    this._x1 = null;\n    this._y = constant(0);\n    this._y0 = constant(0);\n    this._y1 = accessor(\"y\");\n\n  }\n\n  /**\n      @memberof Bar\n      @desc Draws the bars.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    this._enter\n      .attr(\"width\", (d, i) => this._x1 === null ? this._getWidth(d, i) : 0)\n      .attr(\"height\", (d, i) => this._x1 !== null ? this._getHeight(d, i) : 0)\n      .attr(\"x\", (d, i) => this._x1 === null ? -this._getWidth(d, i) / 2 : 0)\n      .attr(\"y\", (d, i) => this._x1 !== null ? -this._getHeight(d, i) / 2 : 0)\n      .call(this._applyStyle.bind(this))\n      .transition(this._transition)\n      .call(this._applyPosition.bind(this));\n\n    this._update.transition(this._transition)\n      .call(this._applyStyle.bind(this))\n      .call(this._applyPosition.bind(this));\n\n    this._exit.transition(this._transition)\n      .attr(\"width\", (d, i) => this._x1 === null ? this._getWidth(d, i) : 0)\n      .attr(\"height\", (d, i) => this._x1 !== null ? this._getHeight(d, i) : 0)\n      .attr(\"x\", (d, i) => this._x1 === null ? -this._getWidth(d, i) / 2 : 0)\n      .attr(\"y\", (d, i) => this._x1 !== null ? -this._getHeight(d, i) / 2 : 0);\n\n    return this;\n\n  }\n\n  /**\n      @memberof Bar\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d, i) {\n    return {height: this._getHeight(d, i), width: this._getWidth(d, i)};\n  }\n\n  /**\n      @memberof Bar\n      @desc Provides the default positioning to the <rect> elements.\n      @param {D3Selection} *elem*\n      @private\n  */\n  _applyPosition(elem) {\n    elem\n      .attr(\"width\", (d, i) => this._getWidth(d, i))\n      .attr(\"height\", (d, i) => this._getHeight(d, i))\n      .attr(\"x\", (d, i) => this._x1 !== null ? this._getX(d, i) : -this._getWidth(d, i) / 2)\n      .attr(\"y\", (d, i) => this._x1 === null ? this._getY(d, i) : -this._getHeight(d, i) / 2);\n  }\n\n  /**\n      @memberof Bar\n      @desc Calculates the height of the <rect> by assessing the x and y properties.\n      @param {Object} *d*\n      @param {Number} *i*\n      @private\n  */\n  _getHeight(d, i) {\n    if (this._x1 !== null) return this._height(d, i);\n    return Math.abs(this._y1(d, i) - this._y(d, i));\n  }\n\n  /**\n      @memberof Bar\n      @desc Calculates the width of the <rect> by assessing the x and y properties.\n      @param {Object} *d*\n      @param {Number} *i*\n      @private\n  */\n  _getWidth(d, i) {\n    if (this._x1 === null) return this._width(d, i);\n    return Math.abs(this._x1(d, i) - this._x(d, i));\n  }\n\n  /**\n      @memberof Bar\n      @desc Calculates the x of the <rect> by assessing the x and width properties.\n      @param {Object} *d*\n      @param {Number} *i*\n      @private\n  */\n  _getX(d, i) {\n    const w = this._x1 === null ? this._x(d, i) : this._x1(d, i) - this._x(d, i);\n    if (w < 0) return w;\n    else return 0;\n  }\n\n  /**\n      @memberof Bar\n      @desc Calculates the y of the <rect> by assessing the y and height properties.\n      @param {Object} *d*\n      @param {Number} *i*\n      @private\n  */\n  _getY(d, i) {\n    const h = this._x1 !== null ? this._y(d, i) : this._y1(d, i) - this._y(d, i);\n    if (h < 0) return h;\n    else return 0;\n  }\n\n  /**\n      @memberof Bar\n      @desc If *value* is specified, sets the height accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.height;\n}\n  */\n  height(_) {\n    return arguments.length ? (this._height = typeof _ === \"function\" ? _ : constant(_), this) : this._height;\n  }\n\n  /**\n      @memberof Bar\n      @desc If *value* is specified, sets the width accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.width;\n}\n  */\n  width(_) {\n    return arguments.length ? (this._width = typeof _ === \"function\" ? _ : constant(_), this) : this._width;\n  }\n\n  /**\n      @memberof Bar\n      @desc If *value* is specified, sets the x0 accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  x0(_) {\n    if (!arguments.length) return this._x0;\n    this._x0 = typeof _ === \"function\" ? _ : constant(_);\n    this._x = this._x0;\n    return this;\n  }\n\n  /**\n      @memberof Bar\n      @desc If *value* is specified, sets the x1 accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number|null} [*value*]\n      @chainable\n  */\n  x1(_) {\n    return arguments.length ? (this._x1 = typeof _ === \"function\" || _ === null ? _ : constant(_), this) : this._x1;\n  }\n\n  /**\n      @memberof Bar\n      @desc If *value* is specified, sets the y0 accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  y0(_) {\n    if (!arguments.length) return this._y0;\n    this._y0 = typeof _ === \"function\" ? _ : constant(_);\n    this._y = this._y0;\n    return this;\n  }\n\n  /**\n      @memberof Bar\n      @desc If *value* is specified, sets the y1 accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number|null} [*value*]\n      @chainable\n  */\n  y1(_) {\n    return arguments.length ? (this._y1 = typeof _ === \"function\" || _ === null ? _ : constant(_), this) : this._y1;\n  }\n\n}\n","import {accessor, assign, constant} from \"d3plus-common\";\n\nimport Shape from \"./Shape\";\n\n/**\n    @class Circle\n    @extends Shape\n    @desc Creates SVG circles based on an array of data.\n*/\nexport default class Circle extends Shape {\n\n  /**\n      @memberof Circle\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n    super(\"circle\");\n    this._labelBounds = (d, i, s) =>\n      ({width: s.r * 1.5, height: s.r * 1.5, x: -s.r * 0.75, y: -s.r * 0.75});\n    this._labelConfig = assign(this._labelConfig, {\n      textAnchor: \"middle\",\n      verticalAlign: \"middle\"\n    });\n    this._name = \"Circle\";\n    this._r = accessor(\"r\");\n  }\n\n  /**\n      @memberof Circle\n      @desc Provides the default positioning to the <rect> elements.\n      @private\n  */\n  _applyPosition(elem) {\n    elem\n      .attr(\"r\", (d, i) => this._r(d, i))\n      .attr(\"x\", (d, i) => -this._r(d, i) / 2)\n      .attr(\"y\", (d, i) => -this._r(d, i) / 2);\n  }\n\n  /**\n      @memberof Circle\n      @desc Draws the circles.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    this._enter\n      .attr(\"r\", 0).attr(\"x\", 0).attr(\"y\", 0)\n      .call(this._applyStyle.bind(this))\n      .transition(this._transition)\n      .call(this._applyPosition.bind(this));\n\n    this._update.transition(this._transition)\n      .call(this._applyStyle.bind(this))\n      .call(this._applyPosition.bind(this));\n\n    this._exit.transition(this._transition)\n      .attr(\"r\", 0).attr(\"x\", 0).attr(\"y\", 0);\n\n    return this;\n\n  }\n\n  /**\n      @memberof Circle\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d, i) {\n    return {r: this._r(d, i)};\n  }\n\n  /**\n      @memberof Circle\n      @desc If *value* is specified, sets the radius accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.r;\n}\n  */\n  r(_) {\n    return arguments.length ? (this._r = typeof _ === \"function\" ? _ : constant(_), this) : this._r;\n  }\n\n}\n","import {accessor, constant} from \"d3plus-common\";\n\nimport Shape from \"./Shape\";\n\n/**\n    @class Rect\n    @extends Shape\n    @desc Creates SVG rectangles based on an array of data. See [this example](https://d3plus.org/examples/d3plus-shape/getting-started/) for help getting started using the rectangle generator.\n*/\nexport default class Rect extends Shape {\n\n  /**\n      @memberof Rect\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n    super(\"rect\");\n    this._height = accessor(\"height\");\n    this._labelBounds = (d, i, s) =>\n      ({width: s.width, height: s.height, x: -s.width / 2, y: -s.height / 2});\n    this._name = \"Rect\";\n    this._width = accessor(\"width\");\n  }\n\n  /**\n      @memberof Rect\n      @desc Draws the rectangles.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    this._enter\n      .attr(\"width\", 0).attr(\"height\", 0)\n      .attr(\"x\", 0).attr(\"y\", 0)\n      .call(this._applyStyle.bind(this))\n      .transition(this._transition)\n      .call(this._applyPosition.bind(this));\n\n    this._update.transition(this._transition)\n      .call(this._applyStyle.bind(this))\n      .call(this._applyPosition.bind(this));\n\n    this._exit.transition(this._transition)\n      .attr(\"width\", 0).attr(\"height\", 0)\n      .attr(\"x\", 0).attr(\"y\", 0);\n\n    return this;\n\n  }\n\n  /**\n      @memberof Rect\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d, i) {\n    return {width: this._width(d, i), height: this._height(d, i)};\n  }\n\n  /**\n      @memberof Rect\n      @desc Provides the default positioning to the <rect> elements.\n      @param {D3Selection} *elem*\n      @private\n  */\n  _applyPosition(elem) {\n    elem\n      .attr(\"width\", (d, i) => this._width(d, i))\n      .attr(\"height\", (d, i) => this._height(d, i))\n      .attr(\"x\", (d, i) => -this._width(d, i) / 2)\n      .attr(\"y\", (d, i) => -this._height(d, i) / 2);\n  }\n\n  /**\n      @memberof Rect\n      @desc If *value* is specified, sets the height accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.height;\n}\n  */\n  height(_) {\n    return arguments.length ? (this._height = typeof _ === \"function\" ? _ : constant(_), this) : this._height;\n  }\n\n  /**\n      @memberof Rect\n      @desc If *value* is specified, sets the width accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.width;\n}\n  */\n  width(_) {\n    return arguments.length ? (this._width = typeof _ === \"function\" ? _ : constant(_), this) : this._width;\n  }\n\n}\n","import {extent} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {interpolatePath} from \"d3-interpolate-path\";\nimport {select} from \"d3-selection\";\nimport * as paths from \"d3-shape\";\n\nimport {constant, merge} from \"d3plus-common\";\n\nimport Shape from \"./Shape\";\n\n/**\n    @class Line\n    @extends Shape\n    @desc Creates SVG lines based on an array of data.\n*/\nexport default class Line extends Shape {\n\n  /**\n      @memberof Line\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._curve = \"linear\";\n    this._defined = d => d;\n    this._fill = constant(\"none\");\n    this._hitArea = constant({\n      \"d\": d => this._path(d.values),\n      \"fill\": \"none\",\n      \"stroke-width\": 10,\n      \"transform\": null\n    });\n    this._name = \"Line\";\n    this._path = paths.line();\n    this._stroke = constant(\"black\");\n    this._strokeWidth = constant(1);\n\n  }\n\n  /**\n      @memberof Line\n      @desc Filters/manipulates the data array before binding each point to an SVG group.\n      @param {Array} [*data* = the data array to be filtered]\n      @private\n  */\n  _dataFilter(data) {\n\n    const lines = nest().key(this._id).entries(data).map(d => {\n\n      d.data = merge(d.values);\n      d.i = data.indexOf(d.values[0]);\n\n      const x = extent(d.values, this._x);\n      d.xR = x;\n      d.width = x[1] - x[0];\n      d.x = x[0] + d.width / 2;\n\n      const y = extent(d.values, this._y);\n      d.yR = y;\n      d.height = y[1] - y[0];\n      d.y = y[0] + d.height / 2;\n\n      d.nested = true;\n      d.translate = [d.x, d.y];\n      d.__d3plusShape__ = true;\n\n      return d;\n    });\n\n    lines.key = d => d.key;\n    return lines;\n\n  }\n\n  /**\n      @memberof Line\n      @desc Draws the lines.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    const that = this;\n\n    this._path\n      .curve(paths[`curve${this._curve.charAt(0).toUpperCase()}${this._curve.slice(1)}`])\n      .defined(this._defined)\n      .x(this._x)\n      .y(this._y);\n\n    this._enter.append(\"path\")\n      .attr(\"transform\", d => `translate(${-d.xR[0] - d.width / 2}, ${-d.yR[0] - d.height / 2})`)\n      .attr(\"d\", d => this._path(d.values))\n      .call(this._applyStyle.bind(this));\n\n    this._update.select(\"path\").transition(this._transition)\n      .attr(\"transform\", d => `translate(${-d.xR[0] - d.width / 2}, ${-d.yR[0] - d.height / 2})`)\n      .attrTween(\"d\", function(d) {\n        return interpolatePath(select(this).attr(\"d\"), that._path(d.values));\n      })\n      .call(this._applyStyle.bind(this));\n\n    return this;\n\n  }\n\n  /**\n      @memberof Line\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d, i) {\n    return {points: d.values.map(p => [this._x(p, i), this._y(p, i)])};\n  }\n\n  /**\n      @memberof Line\n      @desc If *value* is specified, sets the line curve to the specified string and returns the current class instance. If *value* is not specified, returns the current line curve.\n      @param {String} [*value* = \"linear\"]\n      @chainable\n  */\n  curve(_) {\n    return arguments.length ? (this._curve = _, this) : this._curve;\n  }\n\n  /**\n      @memberof Line\n      @desc If *value* is specified, sets the defined accessor to the specified function and returns the current class instance. If *value* is not specified, returns the current defined accessor.\n      @param {Function} [*value*]\n      @chainable\n  */\n  defined(_) {\n    return arguments.length ? (this._defined = _, this) : this._defined;\n  }\n\n}\n","import {select} from \"d3-selection\";\n\nimport {accessor, assign, BaseClass, configPrep, constant, elem} from \"d3plus-common\";\nimport {nest} from \"d3-collection\";\n\nimport Circle from \"./Circle\";\nimport Line from \"./Line\";\nimport Rect from \"./Rect\";\n\nconst shapes = {Circle, Rect};\n\n/**\n    @class Whisker\n    @extends BaseClass\n    @desc Creates SVG whisker based on an array of data.\n*/\nexport default class Whisker extends BaseClass {\n\n  /**\n      @memberof Whisker\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from BaseClass.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._endpoint = accessor(\"endpoint\", \"Rect\");\n    this._endpointConfig = {\n      Circle: {\n        r: accessor(\"r\", 5)\n      }\n    };\n    this._length = accessor(\"length\", 25);\n    this._lineConfig = {};\n    this._orient = accessor(\"orient\", \"top\");\n    this._x = accessor(\"x\", 0);\n    this._y = accessor(\"y\", 0);\n\n  }\n\n  /**\n      @memberof Whisker\n      @desc Draws the whisker.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    if (this._select === void 0) {\n      this.select(select(\"body\").append(\"svg\")\n        .style(\"width\", `${window.innerWidth}px`)\n        .style(\"height\", `${window.innerHeight}px`)\n        .style(\"display\", \"block\").node());\n    }\n\n    const lineData = [];\n    this._data.forEach((d, i) => {\n\n      const orient = this._orient(d, i);\n      const x = this._x(d, i);\n      const y = this._y(d, i);\n\n      let endpointX = x;\n      if (orient === \"left\") endpointX -= this._length(d, i);\n      else if (orient === \"right\") endpointX += this._length(d, i);\n\n      let endpointY = y;\n      if (orient === \"top\") endpointY -= this._length(d, i);\n      else if (orient === \"bottom\") endpointY += this._length(d, i);\n\n      lineData.push({__d3plus__: true, data: d, i, id: i, x, y});\n      lineData.push({__d3plus__: true, data: d, i, id: i, x: endpointX, y: endpointY});\n    });\n\n    // Draw whisker line.\n    this._line = new Line()\n      .data(lineData)\n      .select(elem(\"g.d3plus-Whisker\", {parent: this._select}).node())\n      .config(configPrep.bind(this)(this._lineConfig, \"shape\"))\n      .render(callback);\n\n    const whiskerData = this._data.map((d, i) => {\n\n      const dataObj = {};\n      dataObj.__d3plus__ = true;\n      dataObj.data = d;\n      dataObj.i = i;\n      dataObj.endpoint = this._endpoint(d, i);\n      dataObj.length = this._length(d, i);\n      dataObj.orient = this._orient(d, i);\n\n      let endpointX = this._x(d, i);\n      if (dataObj.orient === \"left\") endpointX -= dataObj.length;\n      else if (dataObj.orient === \"right\") endpointX += dataObj.length;\n\n      let endpointY = this._y(d, i);\n      if (dataObj.orient === \"top\") endpointY -= dataObj.length;\n      else if (dataObj.orient === \"bottom\") endpointY += dataObj.length;\n\n      dataObj.x = endpointX;\n      dataObj.y = endpointY;\n\n      return dataObj;\n\n    });\n\n    // Draw whisker endpoint.\n    this._whiskerEndpoint = [];\n    nest()\n      .key(d => d.endpoint)\n      .entries(whiskerData)\n      .forEach(shapeData => {\n        const shapeName = shapeData.key;\n        this._whiskerEndpoint.push(new shapes[shapeName]()\n          .data(shapeData.values)\n          .select(elem(`g.d3plus-Whisker-Endpoint-${shapeName}`, {parent: this._select}).node())\n          .config({\n            height: d => d.orient === \"top\" || d.orient === \"bottom\" ? 5 : 20,\n            width: d => d.orient === \"top\" || d.orient === \"bottom\" ? 20 : 5\n          })\n          .config(configPrep.bind(this)(this._endpointConfig, \"shape\", shapeName))\n          .render());\n      });\n\n    return this;\n\n  }\n\n  /**\n      @memberof Whisker\n      @desc Sets the highlight accessor to the Shape class's active function.\n      @param {Function} [*value*]\n      @chainable\n  */\n  active(_) {\n    if (this._line) this._line.active(_);\n    if (this._whiskerEndpoint) this._whiskerEndpoint.forEach(endPoint => endPoint.active(_));\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *data* is specified, sets the data array to the specified array and returns the current class instance. If *data* is not specified, returns the current data array.\n      @param {Array} [*data* = []]\n      @chainable\n  */\n  data(_) {\n    return arguments.length ? (this._data = _, this) : this._data;\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *value* is specified, sets the endpoint accessor to the specified function or string and returns the current class instance.\n      @param {Function|String}\n      @chainable\n  */\n  endpoint(_) {\n    return arguments.length ? (this._endpoint = typeof _ === \"function\" ? _ : constant(_), this) : this._endpoint;\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *value* is specified, sets the config method for each endpoint and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  endpointConfig(_) {\n    return arguments.length ? (this._endpointConfig = assign(this._endpointConfig, _), this) : this._endpointConfig;\n  }\n\n  /**\n      @memberof Whisker\n      @desc Sets the highlight accessor to the Shape class's hover function.\n      @param {Function} [*value*]\n      @chainable\n  */\n  hover(_) {\n    if (this._line) this._line.hover(_);\n    if (this._whiskerEndpoint) this._whiskerEndpoint.forEach(endPoint => endPoint.hover(_));\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *value* is specified, sets the length accessor for whisker and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  length(_) {\n    return arguments.length ? (this._length = typeof _ === \"function\" ? _ : constant(_), this) : this._length;\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *value* is specified, sets the config method for line shape and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  lineConfig(_) {\n    return arguments.length ? (this._lineConfig = assign(this._lineConfig, _), this) : this._lineConfig;\n  }\n  \n  /**\n      @memberof Whisker\n      @desc If *value* is specified, sets the orientation to the specified value. If *value* is not specified, returns the current orientation.\n      @param {Function|String} [*value* = \"top\"] Accepts \"top\", \"right\", \"bottom\" or \"left\"\n      @chainable\n  */\n  orient(_) {\n    return arguments.length ? (this._orient = typeof _ === \"function\" ? _ : constant(_), this) : this._orient;\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *selector* is specified, sets the SVG container element to the specified d3 selector or DOM element and returns the current class instance. If *selector* is not specified, returns the current SVG container element.\n      @param {String|HTMLElement} [*selector* = d3.select(\"body\").append(\"svg\")]\n      @chainable\n  */\n  select(_) {\n    return arguments.length ? (this._select = select(_), this) : this._select;\n  }\n\n  /**\n    @memberof Whisker\n    @desc If *value* is specified, sets the x axis to the specified function or number and returns the current class instance.\n    @param {Function|Number} [*value*]\n    @chainable\n    @example\nfunction(d) {\n  return d.x;\n}\n  */\n  x(_) {\n    return arguments.length ? (this._x = typeof _ === \"function\" ? _ : constant(_), this) : this._x;\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *value* is specified, sets the y axis to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.y;\n}\n  */\n  y(_) {\n    return arguments.length ? (this._y = typeof _ === \"function\" ? _ : constant(_), this) : this._y;\n  }\n\n}\n","import {max, min, quantile} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {select} from \"d3-selection\";\n\nimport {accessor, assign, BaseClass, configPrep, constant, merge, elem} from \"d3plus-common\";\n\nimport Circle from \"./Circle\";\nimport Rect from \"./Rect\";\nimport Whisker from \"./Whisker\";\n\nconst shapes = {Circle, Rect};\n\n/**\n    @class Box\n    @extends BaseClass\n    @desc Creates SVG box based on an array of data.\n*/\nexport default class Box extends BaseClass {\n\n  /**\n      @memberof Box\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from BaseClass.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._medianConfig = {\n      fill: constant(\"black\")\n    };\n    this._orient = accessor(\"orient\", \"vertical\");\n    this._outlier = accessor(\"outlier\", \"Circle\");\n    this._outlierConfig = {\n      Circle: {\n        r: accessor(\"r\", 5)\n      },\n      Rect: {\n        height: (d, i) => this._orient(d, i) === \"vertical\" ? 5 : 20,\n        width: (d, i) => this._orient(d, i) === \"vertical\" ? 20 : 5\n      }\n    };\n    this._rectConfig = {\n      fill: constant(\"white\"),\n      stroke: constant(\"black\"),\n      strokeWidth: constant(1)\n    };\n    this._rectWidth = constant(50);\n    this._whiskerConfig = {};\n    this._whiskerMode = [\"tukey\", \"tukey\"];\n    this._x = accessor(\"x\", 250);\n    this._y = accessor(\"y\", 250);\n\n  }\n\n  /**\n      @memberof Box\n      @desc Draws the Box.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render() {\n\n    if (this._select === void 0) {\n      this.select(select(\"body\").append(\"svg\")\n        .style(\"width\", `${window.innerWidth}px`)\n        .style(\"height\", `${window.innerHeight}px`)\n        .style(\"display\", \"block\").node());\n    }\n\n    const outlierData = [];\n\n    const filteredData = nest()\n      .key((d, i) => this._orient(d, i) === \"vertical\" ? this._x(d, i) : this._y(d, i))\n      .entries(this._data)\n      .map(d => {\n        d.data = merge(d.values);\n        d.i = this._data.indexOf(d.values[0]);\n        d.orient = this._orient(d.data, d.i);\n        const values = d.values.map(d.orient === \"vertical\" ? this._y : this._x);\n        values.sort((a, b) => a - b);\n\n        d.first = quantile(values, 0.25);\n        d.median = quantile(values, 0.50);\n        d.third = quantile(values, 0.75);\n\n        const mode = this._whiskerMode;\n\n        if (mode[0] === \"tukey\") {\n          d.lowerLimit = d.first - (d.third - d.first) * 1.5;\n          if (d.lowerLimit < min(values)) d.lowerLimit = min(values);\n        }\n        else if (mode[0] === \"extent\") d.lowerLimit = min(values);\n        else if (typeof mode[0] === \"number\") d.lowerLimit = quantile(values, mode[0]);\n\n        if (mode[1] === \"tukey\") {\n          d.upperLimit = d.third + (d.third - d.first) * 1.5;\n          if (d.upperLimit > max(values)) d.upperLimit = max(values);\n        }\n        else if (mode[1] === \"extent\") d.upperLimit = max(values);\n        else if (typeof mode[1] === \"number\") d.upperLimit = quantile(values, mode[1]);\n\n        const rectLength = d.third - d.first;\n\n        // Compute values for vertical orientation.\n        if (d.orient === \"vertical\") {\n          d.height = rectLength;\n          d.width = this._rectWidth(d.data, d.i);\n          d.x = this._x(d.data, d.i);\n          d.y = d.first + rectLength / 2;\n        }\n        else if (d.orient === \"horizontal\") {\n        // Compute values for horizontal orientation.\n          d.height = this._rectWidth(d.data, d.i);\n          d.width = rectLength;\n          d.x = d.first + rectLength / 2;\n          d.y = this._y(d.data, d.i);\n        }\n\n        // Compute data for outliers.\n        d.values.forEach((eachValue, index) => {\n          const value = d.orient === \"vertical\" ? this._y(eachValue, index) : this._x(eachValue, index);\n\n          if (value < d.lowerLimit || value > d.upperLimit) {\n            const dataObj = {};\n            dataObj.__d3plus__ = true;\n            dataObj.data = eachValue;\n            dataObj.i = index;\n            dataObj.outlier = this._outlier(eachValue, index);\n\n            if (d.orient === \"vertical\") {\n              dataObj.x = d.x;\n              dataObj.y = value;\n              outlierData.push(dataObj);\n            }\n            else if (d.orient === \"horizontal\") {\n              dataObj.y = d.y;\n              dataObj.x = value;\n              outlierData.push(dataObj);\n            }\n          }\n\n        });\n\n        d.__d3plus__ = true;\n\n        return d;\n      });\n\n    // Draw box.\n    this._box = new Rect()\n      .data(filteredData)\n      .x(d => d.x)\n      .y(d => d.y)\n      .select(elem(\"g.d3plus-Box\", {parent: this._select}).node())\n      .config(configPrep.bind(this)(this._rectConfig, \"shape\"))\n      .render();\n\n    // Draw median.\n    this._median = new Rect()\n      .data(filteredData)\n      .x(d => d.orient === \"vertical\" ? d.x : d.median)\n      .y(d => d.orient === \"vertical\" ? d.median : d.y)\n      .height(d => d.orient === \"vertical\" ? 1 : d.height)\n      .width(d => d.orient === \"vertical\" ? d.width : 1)\n      .select(elem(\"g.d3plus-Box-Median\", {parent: this._select}).node())\n      .config(configPrep.bind(this)(this._medianConfig, \"shape\"))\n      .render();\n\n    // Draw 2 lines using Whisker class.\n    // Construct coordinates for whisker startpoints and push it to the whiskerData.\n    const whiskerData = [];\n    filteredData.forEach((d, i) => {\n      const x = d.x;\n      const y = d.y;\n      const topLength = d.first - d.lowerLimit;\n      const bottomLength = d.upperLimit - d.third;\n\n      if (d.orient === \"vertical\") {\n        const topY = y - d.height / 2;\n        const bottomY = y + d.height / 2;\n        whiskerData.push(\n          {__d3plus__: true, data: d, i, x, y: topY, length: topLength, orient: \"top\"},\n          {__d3plus__: true, data: d, i, x, y: bottomY, length: bottomLength, orient: \"bottom\"}\n        );\n      }\n      else if (d.orient === \"horizontal\") {\n        const topX = x + d.width / 2;\n        const bottomX = x - d.width / 2;\n        whiskerData.push(\n          {__d3plus__: true, data: d, i, x: topX, y, length: bottomLength, orient: \"right\"},\n          {__d3plus__: true, data: d, i, x: bottomX, y, length: topLength, orient: \"left\"}\n        );\n      }\n\n    });\n\n    // Draw whiskers.\n    this._whisker = new Whisker()\n      .data(whiskerData)\n      .select(elem(\"g.d3plus-Box-Whisker\", {parent: this._select}).node())\n      .config(configPrep.bind(this)(this._whiskerConfig, \"shape\"))\n      .render();\n\n    // Draw outliers.\n    this._whiskerEndpoint = [];\n    nest()\n      .key(d => d.outlier)\n      .entries(outlierData)\n      .forEach(shapeData => {\n        const shapeName = shapeData.key;\n        this._whiskerEndpoint.push(new shapes[shapeName]()\n          .data(shapeData.values)\n          .select(elem(`g.d3plus-Box-Outlier-${shapeName}`, {parent: this._select}).node())\n          .config(configPrep.bind(this)(this._outlierConfig, \"shape\", shapeName))\n          .render());\n      });\n\n    return this;\n  }\n\n  /**\n      @memberof Box\n      @desc Sets the highlight accessor to the Shape class's active function.\n      @param {Function} [*value*]\n      @chainable\n  */\n  active(_) {\n    if (this._box) this._box.active(_);\n    if (this._median) this._median.active(_);\n    if (this._whisker) this._whisker.active(_);\n    if (this._whiskerEndpoint) this._whiskerEndpoint.forEach(endPoint => endPoint.active(_));\n  }\n\n  /**\n      @memberof Box\n      @desc If *data* is specified, sets the data array to the specified array and returns the current class instance. If *data* is not specified, returns the current data array.\n      @param {Array} [*data* = []]\n      @chainable\n  */\n  data(_) {\n    return arguments.length ? (this._data = _, this) : this._data;\n  }\n\n  /**\n      @memberof Box\n      @desc Sets the highlight accessor to the Shape class's hover function.\n      @param {Function} [*value*]\n      @chainable\n  */\n  hover(_) {\n    if (this._box) this._box.hover(_);\n    if (this._median) this._median.hover(_);\n    if (this._whisker) this._whisker.hover(_);\n    if (this._whiskerEndpoint) this._whiskerEndpoint.forEach(endPoint => endPoint.hover(_));\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the config method for median and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  medianConfig(_) {\n    return arguments.length ? (this._medianConfig = assign(this._medianConfig, _), this) : this._medianConfig;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the orientation to the specified value. If *value* is not specified, returns the current orientation.\n      @param {Function|String} [*value* = \"vertical\"] Accepts \"vertical\" or \"horizontal\"\n      @chainable\n  */\n  orient(_) {\n    return arguments.length ? (this._orient = typeof _ === \"function\" ? _ : constant(_), this) : this._orient;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the outlier accessor to the specified function or string and returns the current class instance.\n      @param {Function|String}\n      @chainable\n  */\n  outlier(_) {\n    return arguments.length ? (this._outlier = typeof _ === \"function\" ? _ : constant(_), this) : this._outlier;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the config method for each outlier point and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  outlierConfig(_) {\n    return arguments.length ? (this._outlierConfig = assign(this._outlierConfig, _), this) : this._outlierConfig;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the config method for rect shape and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  rectConfig(_) {\n    return arguments.length ? (this._rectConfig = assign(this._rectConfig, _), this) : this._rectConfig;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the width accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.width;\n}\n  */\n  rectWidth(_) {\n    return arguments.length ? (this._rectWidth = typeof _ === \"function\" ? _ : constant(_), this) : this._rectWidth;\n  }\n\n  /**\n      @memberof Box\n      @desc If *selector* is specified, sets the SVG container element to the specified d3 selector or DOM element and returns the current class instance. If *selector* is not specified, returns the current SVG container element.\n      @param {String|HTMLElement} [*selector* = d3.select(\"body\").append(\"svg\")]\n      @chainable\n  */\n  select(_) {\n    return arguments.length ? (this._select = select(_), this) : this._select;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the config method for whisker and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  whiskerConfig(_) {\n    return arguments.length ? (this._whiskerConfig = assign(this._whiskerConfig, _), this) : this._whiskerConfig;\n  }\n\n  /**\n      @memberof Box\n      @desc Determines the value used for each whisker. Can be passed a single value to apply for both whiskers, or an Array of 2 values for the lower and upper whiskers (in that order). Accepted values are `\"tukey\"`, `\"extent\"`, or a Number representing a quantile.\n      @param {String|Number|String[]|Number[]} [*value* = \"tukey\"]\n      @chainable\n  */\n  whiskerMode(_) {\n    return arguments.length ? (this._whiskerMode = _ instanceof Array ? _ : [_, _], this) : this._whiskerMode;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the x axis to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.x;\n}\n  */\n  x(_) {\n    return arguments.length ? (this._x = typeof _ === \"function\" ? _ : accessor(_), this) : this._x;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the y axis to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.y;\n}\n  */\n  y(_) {\n    return arguments.length ? (this._y = typeof _ === \"function\" ? _ : accessor(_), this) : this._y;\n  }\n\n}\n","const pi = Math.PI;\n\n/**\n    @function shapeEdgePoint\n    @desc Calculates the x/y position of a point at the edge of a shape, from the center of the shape, given a specified pixel distance and radian angle.\n    @param {Number} angle The angle, in radians, of the offset point.\n    @param {Number} distance The pixel distance away from the origin.\n    @returns {String} [shape = \"circle\"] The type of shape, which can be either \"circle\" or \"square\".\n*/\nexport default (angle, distance, shape = \"circle\") => {\n\n  if (angle < 0) angle = pi * 2 + angle;\n\n  if (shape === \"square\") {\n\n    const diagonal = 45 * (pi / 180);\n    let x = 0, y = 0;\n\n    if (angle < pi / 2) {\n      const tan = Math.tan(angle);\n      x += angle < diagonal ? distance : distance / tan;\n      y += angle < diagonal ? tan * distance : distance;\n    }\n    else if (angle <= pi) {\n      const tan = Math.tan(pi - angle);\n      x -= angle < pi - diagonal ? distance / tan : distance;\n      y += angle < pi - diagonal ? distance : tan * distance;\n    }\n    else if (angle < diagonal + pi) {\n      x -= distance;\n      y -= Math.tan(angle - pi) * distance;\n    }\n    else if (angle < 3 * pi / 2) {\n      x -= distance / Math.tan(angle - pi);\n      y -= distance;\n    }\n    else if (angle < 2 * pi - diagonal) {\n      x += distance / Math.tan(2 * pi - angle);\n      y -= distance;\n    }\n    else {\n      x += distance;\n      y -= Math.tan(2 * pi - angle) * distance;\n    }\n\n    return [x, y];\n\n  }\n  else if (shape === \"circle\") {\n    return [distance * Math.cos(angle), distance * Math.sin(angle)];\n  }\n  else return null;\n\n};\n","import pointDistance from \"./pointDistance\";\nimport shapeEdgePoint from \"./shapeEdgePoint\";\n\nconst pi = Math.PI;\n\n/**\n    @function path2polygon\n    @desc Transforms a path string into an Array of points.\n    @param {String} path An SVG string path, commonly the \"d\" property of a <path> element.\n    @param {Number} [segmentLength = 20] The lenght of line segments when converting curves line segments. Higher values lower computation time, but will result in curves that are more rigid.\n    @returns {Array}\n*/\nexport default (path, segmentLength = 20) => {\n\n  const poly = [],\n        regex = /([MLA])([^MLAZ]+)/ig;\n\n  let match = regex.exec(path);\n  while (match !== null) {\n\n    if ([\"M\", \"L\"].includes(match[1])) poly.push(match[2].split(\",\").map(Number));\n    else if (match[1] === \"A\") {\n\n      const points = match[2].split(\",\").map(Number);\n\n      const last = points.slice(points.length - 2, points.length),\n            prev = poly[poly.length - 1],\n            radius = points[0],\n            width = pointDistance(prev, last);\n\n      let angle = Math.acos((radius * radius + radius * radius - width * width) / (2 * radius * radius));\n      if (points[2]) angle = pi * 2 - angle;\n\n      const step = angle / (angle / (pi * 2) * (radius * pi * 2) / segmentLength);\n      const start = Math.atan2(-prev[1], -prev[0]) - pi;\n      let i = step;\n      while (i < angle) {\n        poly.push(shapeEdgePoint(points[4] ? start + i : start - i, radius));\n        i += step;\n      }\n      poly.push(last);\n\n    }\n    match = regex.exec(path);\n\n  }\n\n  return poly;\n\n};\n","import {accessor, constant} from \"d3plus-common\";\n\nimport Shape from \"./Shape\";\nimport largestRect from \"../geom/largestRect\";\nimport path2polygon from \"../geom/path2polygon\";\n\n/**\n    @class Path\n    @extends Shape\n    @desc Creates SVG Paths based on an array of data.\n*/\nexport default class Path extends Shape {\n\n  /**\n      @memberof Path\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n    super(\"path\");\n    this._d = accessor(\"path\");\n    this._labelBounds = (d, i, aes) => {\n      const r = largestRect(aes.points, {angle: this._labelConfig.rotate ? this._labelConfig.rotate(d, i) : 0});\n      return {angle: r.angle, width: r.width, height: r.height, x: r.cx - r.width / 2, y: r.cy - r.height / 2};\n    };\n    this._name = \"Path\";\n    this._labelConfig = Object.assign(this._labelConfig, {\n      textAnchor: \"middle\",\n      verticalAlign: \"middle\"\n    });\n  }\n\n  /**\n      @memberof Path\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d, i) {\n    return {points: path2polygon(this._d(d, i))};\n  }\n\n  /**\n      @memberof Path\n      @desc Draws the paths.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    this._enter\n      .attr(\"opacity\", 0)\n      .attr(\"d\", this._d)\n      .call(this._applyStyle.bind(this))\n      .transition(this._transition)\n      .attr(\"opacity\", 1);\n\n    this._update.transition(this._transition)\n      .call(this._applyStyle.bind(this))\n      .attr(\"opacity\", 1)\n      .attr(\"d\", this._d);\n\n    this._exit.transition(this._transition)\n      .attr(\"opacity\", 0);\n\n    return this;\n\n  }\n\n  /**\n      @memberof Path\n      @desc If *value* is specified, sets the \"d\" attribute accessor to the specified function or number and returns the current class instance.\n      @param {Function|String} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.path;\n}\n  */\n  d(_) {\n    return arguments.length ? (this._d = typeof _ === \"function\" ? _ : constant(_), this) : this._d;\n  }\n\n}\n"],"names":["accessor","constant","select","this","transition","const","super","let","color","TextBox","colorContrast","mouse","min","e","attrize","elem","configPrep","selectAll","strip","assign","BaseClass","polygonContains","range","merge","polygonArea","extent","polygonCentroid","i","p1W","p2W","p1H","p2H","nest","paths.area","interpolatePath","paths.line","shapes","quantile","max","tan","pi"],"mappings":"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"}