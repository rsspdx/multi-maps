{"version":3,"file":"Area.js","sources":["../../../src/Shape/Area.js"],"sourcesContent":["import {extent} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {interpolatePath} from \"d3-interpolate-path\";\nimport {select} from \"d3-selection\";\nimport * as paths from \"d3-shape\";\n\nimport {accessor, constant, merge} from \"d3plus-common\";\n\nimport Shape from \"./Shape\";\nimport largestRect from \"../geom/largestRect\";\n\n/**\n    @class Area\n    @extends Shape\n    @desc Creates SVG areas based on an array of data.\n*/\nexport default class Area extends Shape {\n\n  /**\n      @memberof Area\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._curve = \"linear\";\n    this._defined = () => true;\n    this._labelBounds = (d, i, aes) => {\n      const r = largestRect(aes.points);\n      if (!r) return null;\n      return {angle: r.angle, width: r.width, height: r.height, x: r.cx - r.width / 2 - this._x(d, i), y: r.cy - r.height / 2 - this._y(d, i)};\n    };\n    this._labelConfig = Object.assign(this._labelConfig, {\n      textAnchor: \"middle\",\n      verticalAlign: \"middle\"\n    });\n    this._name = \"Area\";\n    this._x = accessor(\"x\");\n    this._x0 = accessor(\"x\");\n    this._x1 = null;\n    this._y = constant(0);\n    this._y0 = constant(0);\n    this._y1 = accessor(\"y\");\n\n  }\n\n  /**\n      @memberof Area\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d) {\n    const values = d.values.slice().sort((a, b) => this._y1 ? this._x(a) - this._x(b) : this._y(a) - this._y(b));\n    const points1 = values.map((v, z) => [this._x0(v, z), this._y0(v, z)]);\n    const points2 = values.reverse().map((v, z) => this._y1 ? [this._x(v, z), this._y1(v, z)] : [this._x1(v, z), this._y(v, z)]);\n    let points = points1.concat(points2);\n    if (points1[0][1] > points2[0][1]) points = points.reverse();\n    points.push(points[0]);\n    return {points};\n  }\n\n  /**\n      @memberof Area\n      @desc Filters/manipulates the data array before binding each point to an SVG group.\n      @param {Array} [*data* = the data array to be filtered]\n      @private\n  */\n  _dataFilter(data) {\n\n    const areas = nest().key(this._id).entries(data).map(d => {\n\n      d.data = merge(d.values);\n      d.i = data.indexOf(d.values[0]);\n\n      const x = extent(d.values.map(this._x)\n        .concat(d.values.map(this._x0))\n        .concat(this._x1 ? d.values.map(this._x1) : [])\n      );\n      d.xR = x;\n      d.width = x[1] - x[0];\n      d.x = x[0] + d.width / 2;\n\n      const y = extent(d.values.map(this._y)\n        .concat(d.values.map(this._y0))\n        .concat(this._y1 ? d.values.map(this._y1) : [])\n      );\n      d.yR = y;\n      d.height = y[1] - y[0];\n      d.y = y[0] + d.height / 2;\n\n      d.nested = true;\n      d.translate = [d.x, d.y];\n      d.__d3plusShape__ = true;\n\n      return d;\n    });\n\n    areas.key = d => d.key;\n    return areas;\n\n  }\n\n  /**\n      @memberof Area\n      @desc Draws the area polygons.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    const path = this._path = paths.area()\n      .defined(this._defined)\n      .curve(paths[`curve${this._curve.charAt(0).toUpperCase()}${this._curve.slice(1)}`])\n      .x(this._x).x0(this._x0).x1(this._x1)\n      .y(this._y).y0(this._y0).y1(this._y1);\n\n    const exitPath = paths.area()\n      .defined(d => d)\n      .curve(paths[`curve${this._curve.charAt(0).toUpperCase()}${this._curve.slice(1)}`])\n      .x(this._x).x0(this._x0).x1(this._x1)\n      .y(this._y).y0(this._y0).y1(this._y1);\n\n    this._enter.append(\"path\")\n      .attr(\"transform\", d => `translate(${-d.xR[0] - d.width / 2}, ${-d.yR[0] - d.height / 2})`)\n      .attr(\"d\", d => path(d.values))\n      .call(this._applyStyle.bind(this));\n\n    this._update.select(\"path\").transition(this._transition)\n      .attr(\"transform\", d => `translate(${-d.xR[0] - d.width / 2}, ${-d.yR[0] - d.height / 2})`)\n      .attrTween(\"d\", function(d) {\n        return interpolatePath(select(this).attr(\"d\"), path(d.values));\n      })\n      .call(this._applyStyle.bind(this));\n\n    this._exit.select(\"path\").transition(this._transition)\n      .attrTween(\"d\", function(d) {\n        return interpolatePath(select(this).attr(\"d\"), exitPath(d.values));\n      });\n\n    return this;\n\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the area curve to the specified string and returns the current class instance. If *value* is not specified, returns the current area curve.\n      @param {String} [*value* = \"linear\"]\n      @chainable\n  */\n  curve(_) {\n    return arguments.length ? (this._curve = _, this) : this._curve;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the defined accessor to the specified function and returns the current class instance. If *value* is not specified, returns the current defined accessor.\n      @param {Function} [*value*]\n      @chainable\n  */\n  defined(_) {\n    return arguments.length ? (this._defined = _, this) : this._defined;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the x accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current x accessor.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  x(_) {\n    if (!arguments.length) return this._x;\n    this._x = typeof _ === \"function\" ? _ : constant(_);\n    this._x0 = this._x;\n    return this;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the x0 accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current x0 accessor.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  x0(_) {\n    if (!arguments.length) return this._x0;\n    this._x0 = typeof _ === \"function\" ? _ : constant(_);\n    this._x = this._x0;\n    return this;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the x1 accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current x1 accessor.\n      @param {Function|Number|null} [*value*]\n      @chainable\n  */\n  x1(_) {\n    return arguments.length ? (this._x1 = typeof _ === \"function\" || _ === null ? _ : constant(_), this) : this._x1;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the y accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current y accessor.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  y(_) {\n    if (!arguments.length) return this._y;\n    this._y = typeof _ === \"function\" ? _ : constant(_);\n    this._y0 = this._y;\n    return this;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the y0 accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current y0 accessor.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  y0(_) {\n    if (!arguments.length) return this._y0;\n    this._y0 = typeof _ === \"function\" ? _ : constant(_);\n    this._y = this._y0;\n    return this;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the y1 accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current y1 accessor.\n      @param {Function|Number|null} [*value*]\n      @chainable\n  */\n  y1(_) {\n    return arguments.length ? (this._y1 = typeof _ === \"function\" || _ === null ? _ : constant(_), this) : this._y1;\n  }\n\n}\n"],"names":["super","const","this","let"],"mappings":"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"}