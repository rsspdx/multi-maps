{"version":3,"file":"Line.js","sources":["../../../src/Shape/Line.js"],"sourcesContent":["import {extent} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {interpolatePath} from \"d3-interpolate-path\";\nimport {select} from \"d3-selection\";\nimport * as paths from \"d3-shape\";\n\nimport {constant, merge} from \"d3plus-common\";\n\nimport Shape from \"./Shape\";\n\n/**\n    @class Line\n    @extends Shape\n    @desc Creates SVG lines based on an array of data.\n*/\nexport default class Line extends Shape {\n\n  /**\n      @memberof Line\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._curve = \"linear\";\n    this._defined = d => d;\n    this._fill = constant(\"none\");\n    this._hitArea = constant({\n      \"d\": d => this._path(d.values),\n      \"fill\": \"none\",\n      \"stroke-width\": 10,\n      \"transform\": null\n    });\n    this._name = \"Line\";\n    this._path = paths.line();\n    this._stroke = constant(\"black\");\n    this._strokeWidth = constant(1);\n\n  }\n\n  /**\n      @memberof Line\n      @desc Filters/manipulates the data array before binding each point to an SVG group.\n      @param {Array} [*data* = the data array to be filtered]\n      @private\n  */\n  _dataFilter(data) {\n\n    const lines = nest().key(this._id).entries(data).map(d => {\n\n      d.data = merge(d.values);\n      d.i = data.indexOf(d.values[0]);\n\n      const x = extent(d.values, this._x);\n      d.xR = x;\n      d.width = x[1] - x[0];\n      d.x = x[0] + d.width / 2;\n\n      const y = extent(d.values, this._y);\n      d.yR = y;\n      d.height = y[1] - y[0];\n      d.y = y[0] + d.height / 2;\n\n      d.nested = true;\n      d.translate = [d.x, d.y];\n      d.__d3plusShape__ = true;\n\n      return d;\n    });\n\n    lines.key = d => d.key;\n    return lines;\n\n  }\n\n  /**\n      @memberof Line\n      @desc Draws the lines.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    const that = this;\n\n    this._path\n      .curve(paths[`curve${this._curve.charAt(0).toUpperCase()}${this._curve.slice(1)}`])\n      .defined(this._defined)\n      .x(this._x)\n      .y(this._y);\n\n    this._enter.append(\"path\")\n      .attr(\"transform\", d => `translate(${-d.xR[0] - d.width / 2}, ${-d.yR[0] - d.height / 2})`)\n      .attr(\"d\", d => this._path(d.values))\n      .call(this._applyStyle.bind(this));\n\n    this._update.select(\"path\").transition(this._transition)\n      .attr(\"transform\", d => `translate(${-d.xR[0] - d.width / 2}, ${-d.yR[0] - d.height / 2})`)\n      .attrTween(\"d\", function(d) {\n        return interpolatePath(select(this).attr(\"d\"), that._path(d.values));\n      })\n      .call(this._applyStyle.bind(this));\n\n    return this;\n\n  }\n\n  /**\n      @memberof Line\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d, i) {\n    return {points: d.values.map(p => [this._x(p, i), this._y(p, i)])};\n  }\n\n  /**\n      @memberof Line\n      @desc If *value* is specified, sets the line curve to the specified string and returns the current class instance. If *value* is not specified, returns the current line curve.\n      @param {String} [*value* = \"linear\"]\n      @chainable\n  */\n  curve(_) {\n    return arguments.length ? (this._curve = _, this) : this._curve;\n  }\n\n  /**\n      @memberof Line\n      @desc If *value* is specified, sets the defined accessor to the specified function and returns the current class instance. If *value* is not specified, returns the current defined accessor.\n      @param {Function} [*value*]\n      @chainable\n  */\n  defined(_) {\n    return arguments.length ? (this._defined = _, this) : this._defined;\n  }\n\n}\n"],"names":["super","this","const"],"mappings":"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"}