{"version":3,"file":"simplify.js","sources":["../../../src/geom/simplify.js"],"sourcesContent":["import pointDistanceSquared from \"./pointDistanceSquared\";\n\n/**\n    @desc square distance from a point to a segment\n    @param {Array} point\n    @param {Array} segmentAnchor1\n    @param {Array} segmentAnchor2\n    @private\n*/\nfunction getSqSegDist(p, p1, p2) {\n\n  let x = p1[0],\n      y = p1[1];\n\n  let dx = p2[0] - x,\n      dy = p2[1] - y;\n\n  if (dx !== 0 || dy !== 0) {\n\n    const t = ((p[0] - x) * dx + (p[1] - y) * dy) / (dx * dx + dy * dy);\n\n    if (t > 1) {\n      x = p2[0];\n      y = p2[1];\n\n    }\n    else if (t > 0) {\n      x += dx * t;\n      y += dy * t;\n    }\n\n  }\n\n  dx = p[0] - x;\n  dy = p[1] - y;\n\n  return dx * dx + dy * dy;\n\n}\n\n/**\n    @desc basic distance-based simplification\n    @param {Array} polygon\n    @param {Number} sqTolerance\n    @private\n*/\nfunction simplifyRadialDist(poly, sqTolerance) {\n\n  let point,\n      prevPoint = poly[0];\n\n  const newPoints = [prevPoint];\n\n  for (let i = 1, len = poly.length; i < len; i++) {\n    point = poly[i];\n\n    if (pointDistanceSquared(point, prevPoint) > sqTolerance) {\n      newPoints.push(point);\n      prevPoint = point;\n    }\n  }\n\n  if (prevPoint !== point) newPoints.push(point);\n\n  return newPoints;\n}\n\n/**\n    @param {Array} polygon\n    @param {Number} first\n    @param {Number} last\n    @param {Number} sqTolerance\n    @param {Array} simplified\n    @private\n*/\nfunction simplifyDPStep(poly, first, last, sqTolerance, simplified) {\n\n  let index, maxSqDist = sqTolerance;\n\n  for (let i = first + 1; i < last; i++) {\n    const sqDist = getSqSegDist(poly[i], poly[first], poly[last]);\n\n    if (sqDist > maxSqDist) {\n      index = i;\n      maxSqDist = sqDist;\n    }\n  }\n\n  if (maxSqDist > sqTolerance) {\n    if (index - first > 1) simplifyDPStep(poly, first, index, sqTolerance, simplified);\n    simplified.push(poly[index]);\n    if (last - index > 1) simplifyDPStep(poly, index, last, sqTolerance, simplified);\n  }\n}\n\n/**\n    @desc simplification using Ramer-Douglas-Peucker algorithm\n    @param {Array} polygon\n    @param {Number} sqTolerance\n    @private\n*/\nfunction simplifyDouglasPeucker(poly, sqTolerance) {\n  const last = poly.length - 1;\n\n  const simplified = [poly[0]];\n  simplifyDPStep(poly, 0, last, sqTolerance, simplified);\n  simplified.push(poly[last]);\n\n  return simplified;\n}\n\n/**\n    @function largestRect\n    @desc Simplifies the points of a polygon using both the Ramer-Douglas-Peucker algorithm and basic distance-based simplification. Adapted to an ES6 module from the excellent [Simplify.js](http://mourner.github.io/simplify-js/).\n    @author Vladimir Agafonkin\n    @param {Array} poly An Array of points that represent a polygon.\n    @param {Number} [tolerance = 1] Affects the amount of simplification (in the same metric as the point coordinates).\n    @param {Boolean} [highestQuality = false] Excludes distance-based preprocessing step which leads to highest quality simplification but runs ~10-20 times slower.\n\n*/\nexport default (poly, tolerance = 1, highestQuality = false) => {\n\n  if (poly.length <= 2) return poly;\n\n  const sqTolerance = tolerance * tolerance;\n\n  poly = highestQuality ? poly : simplifyRadialDist(poly, sqTolerance);\n  poly = simplifyDouglasPeucker(poly, sqTolerance);\n\n  return poly;\n\n};\n"],"names":["let","const"],"mappings":"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"}